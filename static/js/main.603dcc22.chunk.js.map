{"version":3,"sources":["serviceWorker.js","common/helperDAO.js","common/urls.js","routes/users/usersDAO.js","routes/users/Users.js","routes/cart/cartDAO.js","common/OrderItem.js","routes/cart/Cart.js","routes/users/User.js","routes/products/productsDAO.js","routes/products/Product.js","common/InputFields.js","routes/login/Signup.js","routes/login/Login.js","routes/orders/ordersDAO.js","routes/orders/Order.js","routes/products/grid/GridItem.js","routes/products/grid/GridRow.js","routes/products/Products.js","common/SystemHealthDAO.js","Loading.js","App.js","routes/orders/Orders.js","index.js","common/Navbar.js","routes/orders/AllOrders.js","routes/orders/MyOrders.js","routes/error/Error404.js"],"names":["Boolean","window","location","hostname","match","doGet","url","fetch","method","headers","Accept","then","response","ok","json","console","log","concat","status","URLS","CUSTOMERS_WS","PRODUCTS_WS","ORDERS_WS","CARTS_WS","fetchUsers","catch","e","getUser","id","Users","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","users","loadUsers","setState","react_default","a","createElement","className","length","scope","map","user","key","Users_UserRow","React","Component","UserRow","_ref","react_router_dom","to","email","fullName","creationDate","getCart","customerId","OrderItem","orderItem","onChange","disabled","readOnly","totalItemPrice","product","price","quantity","toFixed","src","imageUrl","name","OrderItem_QuantityDropdown","QuantityDropdown","_ref2","toConsumableArray","Array","keys","x","value","selected","Cart","cart","undefined","loading","userId","item","event","target","calculateTotalPrice","products","reduce","acc","loadCart","_this2","orderItems","cartItem","OrderItem_OrderItem","colSpan","User","loadUser","params","User_FieldView","label","address","country","FieldView","fetchProducts","getProduct","Product","loadProduct","description","type","TextInput","fieldName","InputFields_FieldInput","PasswordInput","FieldInput","_ref3","placeholder","htmlFor","Signup","password","repeatPassword","onClick","defineProperty","validateForm","InputFields_TextInput","InputFields_PasswordInput","Login","aria-describedby","fetchOrders","getOrder","Order","order","loadOrder","amount","LinkToProduct","children","GridItem","GridItem_LinkToProduct","GridRow","productsRow","GridItem_GridItem","toMatrix","array","numCols","matrix","i","rowNumber","Math","floor","push","addElementToCell","Products","loadProducts","grid","gridRow","GridRow_GridRow","fetchSystemHealth","Loading","App","systemStatus","initialTimeoutPassed","loadSystemStatus","isSystemUp","services","service","setTimeout","Fragment","Products_Products","Loading_Loading","Orders","orders","loadOrders","title","Orders_OrderRow","OrderRow","date","routing","objectDestructuringEmpty","href","react_router","path","component","Orders_Orders","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.603dcc22.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const doGet = url => fetch(url, {\n    method: 'GET',\n    headers: {\n        Accept: 'application/json'\n    }\n})\n    .then(response => {\n        if (response.ok) {\n            return response.json();\n        }\n\n        console.log(`Response not ok: ${response.status}`);\n    });\n\nexport {doGet}","// Uncomment this line for localhost testing\nconst API_GATEWAY_URL = 'http://localhost:7000';\n\n// Uncomment this line for heroku deployment\n// const API_GATEWAY_URL = 'https://api-gateway-ws.herokuapp.com';\n\nconst URLS = {\n    CUSTOMERS_WS: `${API_GATEWAY_URL}/customers-ws`,\n    PRODUCTS_WS: `${API_GATEWAY_URL}/products-ws`,\n    ORDERS_WS: `${API_GATEWAY_URL}/orders-ws`,\n    CARTS_WS: `${API_GATEWAY_URL}/carts-ws`,\n};\n\nexport {URLS, API_GATEWAY_URL};","import {doGet} from \"../../common/helperDAO\";\nimport {URLS} from \"../../common/urls\";\n\nconst fetchUsers = () => doGet(`${URLS.CUSTOMERS_WS}/customers/`)\n    .catch(e => console.log(`Error when retrieving users: ${e}`));\n\nconst getUser = id => doGet(`${URLS.CUSTOMERS_WS}/customers/${id}`)\n    .catch(e => console.log(`Error when retrieving user ${id}: ${e}`));\n\nexport {fetchUsers, getUser};","import React from 'react';\nimport {fetchUsers} from \"./usersDAO\";\nimport {Link} from \"react-router-dom\";\n\nclass Users extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadUsers();\n    }\n\n    state = {\n        users: []\n    };\n\n    loadUsers = () => fetchUsers()\n        .then(users => this.setState({users}));\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>Users</h1>\n                        {this.state.users && this.state.users.length > 0 &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">User id</th>\n                                <th scope=\"col\">Email address</th>\n                                <th scope=\"col\">Full name</th>\n                                <th scope=\"col\">Registration date</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.users.map((user, key) => <UserRow user={user} key={key}/>)}\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst UserRow = ({user}) =>\n    <tr className=\"text-center\">\n        <th scope=\"row\">{user.id}</th>\n        <td><Link to={`/users/${user.id}`}>{user.email}</Link></td>\n        <td>{user.fullName}</td>\n        <td>{user.creationDate}</td>\n    </tr>;\n\nexport {Users};","import {doGet} from \"../../common/helperDAO\";\nimport {URLS} from \"../../common/urls\";\n\n\nconst getCart = customerId => doGet(`${URLS.CARTS_WS}/customers/${customerId}/cart`)\n    .catch(e => console.log(`Error when retrieving cart for user ${customerId}: ${e}`));\n\nexport {getCart};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nconst OrderItem = ({orderItem, onChange, disabled, readOnly}) => {\n    const totalItemPrice = (orderItem.product.price * orderItem.quantity).toFixed(2);\n\n    return (\n        <tr className=\"text-center cart-item\">\n            <td><Link to={`/products/${orderItem.product.id}`}><img src={orderItem.product.imageUrl}/></Link></td>\n            <td className=\"align-middle\">{orderItem.product.name}</td>\n            <td className=\"align-middle text-right\">{orderItem.product.price} €</td>\n            <td className=\"align-middle\">\n                {readOnly ? orderItem.quantity :\n                    <QuantityDropdown quantity={orderItem.quantity}\n                                      onChange={onChange}\n                                      disabled={disabled}/>\n                }\n            </td>\n            <td className=\"align-middle text-right\">{totalItemPrice} €</td>\n        </tr>\n    );\n};\n\nconst QuantityDropdown = ({quantity, onChange, disabled}) =>\n    <select onChange={onChange} disabled={disabled}>\n        {[...Array(11).keys()]\n            .map(x => <option value={x} key={x} selected={quantity === x}>{x}</option>)}\n    </select>;\n\nexport {OrderItem};","import React from 'react';\nimport {getCart} from \"./cartDAO\";\nimport {OrderItem} from \"../../common/OrderItem\";\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadCart();\n    }\n\n    state = {\n        cart: undefined,\n        loading: false,\n        userId: 12345678\n    };\n\n    onChange = item => event => {\n        this.setState({loading: true});\n        console.log(item);\n        console.log(event.target.value);\n    };\n\n    calculateTotalPrice = products => products\n        .reduce((acc, item) => acc + item.quantity * item.product.price, 0);\n\n    loadCart = () => getCart(this.state.userId)\n        .then(cart => this.setState({cart}));\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        {this.state.cart &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Product</th>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Price</th>\n                                <th scope=\"col\">Quantity</th>\n                                <th scope=\"col\">Total price</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.cart.orderItems.map((cartItem, key) =>\n                                <OrderItem orderItem={cartItem}\n                                           key={key}\n                                           onChange={this.onChange(cartItem.product)}\n                                           disabled={this.state.loading}\n                                           readOnly={false}/>\n                            )}\n                            <tr>\n                                <td colSpan=\"5\" className=\"text-right\">\n                                    {this.calculateTotalPrice(this.state.cart.orderItems).toFixed(2)} €\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Cart};","import React from 'react';\nimport {getUser} from \"./usersDAO\";\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadUser();\n    }\n\n    state = {\n        user: undefined\n    };\n\n    loadUser = () => getUser(this.props.match.params.id)\n        .then(user => this.setState({user}));\n\n    render() {\n        const {user} = this.state;\n\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>User {this.props.match.params.id}</h1>\n                        {user &&\n                        <div className=\"col-12\">\n                            <FieldView label=\"User id\" value={user.id}/>\n                            <FieldView label=\"Email address\" value={user.email}/>\n                            <FieldView label=\"Full name\" value={user.fullName}/>\n                            <FieldView label=\"Address\" value={user.address}/>\n                            <FieldView label=\"Country\" value={user.country}/>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst FieldView = ({label, value}) =>\n    <div className=\"form-group row\">\n        <label className=\"col-sm-3 col-form-label\">{label}</label>\n        <label className=\"col-sm-9 col-form-label\">{value}</label>\n    </div>;\n\nexport {User};","import {URLS} from \"../../common/urls\";\nimport {doGet} from \"../../common/helperDAO\";\n\nconst fetchProducts = () => doGet(`${URLS.PRODUCTS_WS}/products/`)\n    .catch(e => console.log(`Error when retrieving productss: ${e}`));\n\nconst getProduct = id => doGet(`${URLS.PRODUCTS_WS}/products/${id}`)\n    .catch(e => console.log(`Error when retrieving product ${id}: ${e}`));\n\nexport {fetchProducts, getProduct};","import React from 'react';\nimport {getProduct} from \"./productsDAO\";\n\nclass Product extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadProduct();\n    }\n\n    state = {\n        product: undefined\n    };\n\n    loadProduct = () => getProduct(this.props.match.params.id)\n        .then(product => this.setState({product}));\n\n    render() {\n        const {product} = this.state;\n\n        return (\n            <div className=\"container content-padding\">\n                {product &&\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 text-center\">\n                        <img src={product.imageUrl}/>\n                    </div>\n                    <div className=\"col-4 d-flex align-items-start flex-column\">\n                        <div className=\"mb-auto p-2\">\n                            <h1 className=\"product-info-padding\">{product.name}</h1>\n                            <h5 className=\"product-info-padding\">{product.price} €</h5>\n                            <div>{product.description}</div>\n                        </div>\n                        <div className=\"p-2\">\n                            <button type=\"button\" className=\"btn btn-primary\">Add to cart</button>\n                        </div>\n                    </div>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport {Product};","import React from \"react\";\n\n\nconst TextInput = ({fieldName, label, onChange}) =>\n    <FieldInput fieldName={fieldName} label={label} onChange={onChange} type=\"text\"/>;\n\nconst PasswordInput = ({fieldName, label, onChange}) =>\n    <FieldInput fieldName={fieldName} label={label} onChange={onChange} type=\"password\"/>;\n\nconst FieldInput = ({fieldName, label, type, placeholder, onChange}) =>\n    <div className=\"form-group row\">\n        <label htmlFor={fieldName} className=\"col-sm-3 col-form-label\">{label}</label>\n        <div className=\"col-sm-9\">\n            <input type={type}\n                   className=\"form-control\"\n                   id={fieldName}\n                   onChange={onChange}\n                   placeholder={placeholder}/>\n        </div>\n    </div>;\n\nexport {TextInput, PasswordInput};","import React from 'react';\nimport {PasswordInput, TextInput} from \"../../common/InputFields\";\n\nclass Signup extends React.Component {\n\n    state = {\n        email: '',\n        password: '',\n        repeatPassword: '',\n        fullName: '',\n        address: '',\n        country: ''\n    };\n\n    onClick = () => {\n        return false;\n    };\n\n    onChange = event => this.setState({\n        [event.target.id]: event.target.value\n    });\n\n    validateForm = () => !!this.state.email &&\n        !!this.state.password &&\n        !!this.state.repeatPassword &&\n        this.state.password === this.state.repeatPassword &&\n        !!this.state.fullName &&\n        !!this.state.address &&\n        !!this.state.country;\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <form>\n                            <TextInput fieldName=\"email\" label=\"Email address\" onChange={this.onChange}/>\n                            <PasswordInput fieldName=\"password\" label=\"Password\" onChange={this.onChange}/>\n                            <PasswordInput fieldName=\"repeatPassword\" label=\"Repeat password\" onChange={this.onChange}/>\n                            <TextInput fieldName=\"fullName\" label=\"Full name\" onChange={this.onChange}/>\n                            <TextInput fieldName=\"address\" label=\"Address\" onChange={this.onChange}/>\n                            <TextInput fieldName=\"country\" label=\"Country\" onChange={this.onChange}/>\n                            <div className=\"form-group row\">\n                                <div className=\"col-sm-10\">\n                                    <button type=\"button\"\n                                            onClick={this.onClick}\n                                            disabled={!this.validateForm()}\n                                            className=\"btn btn-primary\">\n                                        Sign up\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Signup};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Login extends React.Component {\n\n    state = {\n        email: '',\n        password: ''\n    };\n\n    onClick = () => {\n        return false;\n    };\n\n    onChange = event => this.setState({\n        [event.target.id]: event.target.value\n    });\n\n    validateForm = () => !!this.state.email && !!this.state.password;\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4\">\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email address</label>\n                                <input type=\"email\"\n                                       className=\"form-control\"\n                                       id=\"email\"\n                                       aria-describedby=\"emailHelp\"\n                                       onChange={this.onChange}\n                                       placeholder=\"Enter email\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                       className=\"form-control\"\n                                       id=\"password\"\n                                       onChange={this.onChange}\n                                       placeholder=\"Password\"/>\n                            </div>\n                            <button type=\"button\"\n                                    disabled={!this.validateForm()}\n                                    onClick={this.onClick}\n                                    className=\"btn btn-primary btn-block\">\n                                Log in\n                            </button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center login-separator\">\n                    <div className=\"col-1\">\n                        <hr/>\n                    </div>\n                    <div className=\"col-auto\">or</div>\n                    <div className=\"col-1\">\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4\">\n                        <Link to=\"/signup\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block\">\n                                Sign up\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Login};","import {URLS} from \"../../common/urls\";\nimport {doGet} from \"../../common/helperDAO\";\n\nconst fetchOrders = () => doGet(`${URLS.ORDERS_WS}/orders/`)\n    .catch(e => console.log(`Error when retrieving orders: ${e}`));\n\nconst getOrder = id => doGet(`${URLS.ORDERS_WS}/orders/${id}`)\n    .catch(e => console.log(`Error when retrieving order ${id}: ${e}`));\n\nconst fetchCustomerOrders = customerId => doGet(`${URLS.ORDERS_WS}/customers/${customerId}/orders/`)\n    .catch(e => console.log(`Error when retrieving orders for customer ${customerId}: ${e}`));\n\n\nexport {fetchOrders, fetchCustomerOrders, getOrder};","import React from 'react';\nimport {OrderItem} from \"../../common/OrderItem\";\nimport {getOrder} from \"./ordersDAO\";\n\nclass Order extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadOrder();\n    }\n\n    state = {\n        order: undefined\n    };\n\n    loadOrder = () => getOrder(this.props.match.params.id)\n        .then(order => this.setState({order}));\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>Order {this.props.match.params.id}</h1>\n                        {this.state.order &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Product</th>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Price</th>\n                                <th scope=\"col\">Quantity</th>\n                                <th scope=\"col\">Total price</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.order.orderItems.map((orderItem, key) =>\n                                <OrderItem orderItem={orderItem}\n                                           key={key}\n                                           readOnly={true}/>\n                            )}\n                            <tr>\n                                <td colSpan=\"5\" className=\"text-right\">\n                                    {this.state.order.amount} €\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Order};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst LinkToProduct = ({children, id}) => <Link to={`/products/${id}`}>{children}</Link>;\n\nconst GridItem = ({product}) =>\n    <div className=\"col-6 col-md-2 text-center\">\n        <div className=\"grid-item\">\n            <div><LinkToProduct id={product.id}><img src={product.imageUrl}/></LinkToProduct></div>\n            <LinkToProduct id={product.id}>{product.name}</LinkToProduct>\n            <div>{product.price} €</div>\n            <button type=\"button\" className=\"btn btn-primary\">Add to cart</button>\n        </div>\n    </div>;\n\nexport {GridItem};","import React from 'react';\nimport {GridItem} from \"./GridItem\";\n\nconst GridRow = ({productsRow}) =>\n    <div className=\"row grid-row\">\n        {productsRow.map((product, key) => <GridItem product={product} key={key}/>)}\n    </div>;\n\nexport {GridRow};","import React from 'react';\nimport {GridRow} from \"./grid/GridRow\";\nimport {fetchProducts} from \"./productsDAO\";\n\nconst toMatrix = (array, numCols) => {\n    if (!array)\n        return;\n\n    const addElementToCell = (array, x, i) => {\n        const rowNumber = Math.floor(i / numCols);\n\n        if (i % numCols === 0) {\n            array[rowNumber] = [];\n        }\n\n        array[rowNumber].push(x);\n    };\n\n    const matrix = [];\n\n    array.map((x, i) => addElementToCell(matrix, x, i));\n\n    return matrix;\n\n};\n\nclass Products extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadProducts();\n    }\n\n    state = {\n        products: []\n    };\n\n    loadProducts = () => fetchProducts()\n        .then(products => this.setState({products}));\n\n    render() {\n        const grid = toMatrix(this.state.products, 6);\n\n        return (\n            this.state.products &&\n            <div className=\"container-fluid content-padding\">\n                {\n                    grid.map((gridRow, key) => <GridRow productsRow={gridRow} key={key}/>)\n                }\n            </div>\n        );\n    }\n}\n\nexport {Products};","import {doGet} from \"./helperDAO\";\nimport {API_GATEWAY_URL} from \"./urls\";\n\nconst fetchSystemHealth = () => doGet(`${API_GATEWAY_URL}/system/health`)\n    .catch(e => console.log(`Error when retrieving system health: ${e}`));\n\nexport {fetchSystemHealth};","import React from \"react\";\n\nconst Loading = () => <h1>System is currently loading. Wait for a couple of minutes and try again. Thanks!</h1>;\n\nexport {Loading};","import {Products} from \"./routes/products/Products\";\nimport React from \"react\";\nimport {fetchSystemHealth} from \"./common/SystemHealthDAO\";\nimport {Loading} from \"./Loading\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadSystemStatus();\n        setTimeout(() => this.setState({initialTimeoutPassed: true}), 2000);\n    }\n\n    state = {\n        systemStatus: undefined,\n        initialTimeoutPassed: false\n    };\n\n    loadSystemStatus = () => fetchSystemHealth()\n        .then(systemStatus => this.setState({systemStatus}));\n\n    isSystemUp = () => this.state.systemStatus &&\n        this.state.systemStatus.services\n            .map(service => service.status)\n            .reduce((acc, status) => status === 'UP' && acc, true);\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.isSystemUp() && <Products/>}\n                {!this.isSystemUp() && this.state.initialTimeoutPassed && <Loading/>}\n            </React.Fragment>\n        );\n    }\n}\n\nexport {App}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Orders extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadOrders();\n    }\n\n    state = {\n        orders: []\n    };\n\n    loadOrders = () => this.props.fetchOrders()\n        .then(orders => this.setState({orders}));\n\n    render() {\n        const {orders} = this.state;\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>{this.props.title}</h1>\n                        {orders && orders.length > 0 &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Order id</th>\n                                <th scope=\"col\">User id</th>\n                                <th scope=\"col\">Total price</th>\n                                <th scope=\"col\">Checkout date</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {orders.map((order, key) => <OrderRow order={order} key={key}/>)}\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst OrderRow = ({order}) =>\n    <tr className=\"text-center\">\n        <td><Link to={`/orders/${order.id}`}>{order.id}</Link></td>\n        <td>{order.customerId}</td>\n        <td className=\"text-right\">{order.amount} €</td>\n        <td>{order.date}</td>\n    </tr>;\n\nexport {Orders};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Navbar} from \"./common/Navbar\";\nimport {Users} from \"./routes/users/Users\";\nimport {Cart} from \"./routes/cart/Cart\";\nimport {User} from \"./routes/users/User\";\nimport {Product} from \"./routes/products/Product\";\nimport {Error404} from \"./routes/error/Error404\";\nimport {Signup} from \"./routes/login/Signup\";\nimport {Login} from \"./routes/login/Login\";\nimport {Order} from \"./routes/orders/Order\";\nimport {App} from \"./App\";\nimport {MyOrders} from \"./routes/orders/MyOrders\";\nimport {AllOrders} from \"./routes/orders/AllOrders\";\n\nconst routing = (\n    <Router>\n        <Navbar/>\n        <Switch>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/signup\" component={Signup}/>\n            <Route path=\"/cart\" component={Cart}/>\n            <Route path=\"/orders/:id\" component={Order}/>\n            <Route path=\"/orders\" component={AllOrders}/>\n            <Route path=\"/myOrders\" component={MyOrders}/>\n            <Route path=\"/users/:id\" component={User}/>\n            <Route path=\"/users\" component={Users}/>\n            <Route path=\"/products/:id\" component={Product}/>\n            <Route exact path=\"/\" component={App}/>\n            <Route component={Error404}/>\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = ({}) =>\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <a href=\"/\" className=\"navbar-brand d-flex w-50 mr-auto\">Boardgames online shop</a>\n        <div className=\"navbar-collapse collapse w-100\" id=\"collapsingNavbar3\">\n            <ul className=\"nav navbar-nav ml-auto w-100 justify-content-end\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/users/678\">Profile</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/cart\">Cart</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/orders\">All customer orders</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/myOrders\">My Orders</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/users\">Users</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">Log in</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/signup\">Sign up</Link>\n                </li>\n            </ul>\n        </div>\n    </nav>;\n\nexport {Navbar};","import React from 'react';\nimport {Orders} from \"./Orders\";\nimport {fetchOrders} from \"./ordersDAO\";\n\nconst AllOrders = () => <Orders fetchOrders={fetchOrders} title='All customer orders'/>\n\nexport {AllOrders}","import React from 'react';\nimport {Orders} from \"./Orders\";\nimport {fetchCustomerOrders} from \"./ordersDAO\";\n\nconst MyOrders = () => <Orders fetchOrders={() => fetchCustomerOrders(123324234)}\n                               title='My orders'/>;\n\nexport {MyOrders}","import React from 'react'\n\nconst Error404 = () => <h1 className=\"container content-padding\">Not found</h1>;\n\nexport {Error404};"],"sourceRoot":""}