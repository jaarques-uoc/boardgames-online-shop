{"version":3,"sources":["serviceWorker.js","common/customerSession.js","common/Navbar.js","common/helperDAO.js","common/urls.js","routes/users/usersDAO.js","routes/users/Users.js","routes/cart/cartDAO.js","common/OrderItem.js","common/sorting.js","routes/orders/ordersDAO.js","common/Alert.js","routes/cart/Cart.js","routes/users/User.js","routes/products/productsDAO.js","routes/products/Product.js","common/InputFields.js","routes/login/sessionDAO.js","routes/login/sessionActions.js","common/emailValidation.js","routes/login/Signup.js","routes/login/Login.js","routes/orders/Order.js","routes/products/grid/GridItem.js","routes/products/grid/GridRow.js","routes/products/Products.js","common/SystemHealthDAO.js","Loading.js","App.js","routes/orders/Orders.js","routes/orders/MyOrders.js","routes/login/sessionReducer.js","appReducer.js","routes/login/Logout.js","index.js","routes/orders/AllOrders.js","routes/error/Error404.js","store.js"],"names":["Boolean","window","location","hostname","match","SESSION_ITEMS","isLoggedIn","sessionCustomer","id","email","type","Navbar","connect","state","Object","objectSpread","sessionReducer","_ref","react_default","a","createElement","className","href","Fragment","react_router_dom","to","concat","doGet","url","fetch","method","headers","Accept","then","handleResponse","doPost","body","JSON","stringify","Content-Type","response","ok","json","console","log","status","API_GATEWAY_URL","URLS","CUSTOMERS_WS","PRODUCTS_WS","ORDERS_WS","CARTS_WS","fetchUsers","catch","e","getUser","Users","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","users","loadUsers","setState","length","scope","map","user","key","Users_UserRow","React","Component","UserRow","fullName","date","getCartUrl","customerId","getCart","updateCartItem","orderItem","incrementCartItem","product","OrderItem","onChange","disabled","readOnly","totalItemPrice","productDto","price","quantity","toFixed","src","imageUrl","name","OrderItem_QuantityDropdown","QuantityDropdown","_ref2","value","toConsumableArray","Array","keys","x","sortOrderItems","orderItems","sort","oi1","oi2","localeCompare","fetchOrders","getOrder","createOrder","order","Alert","text","hideAlert","role","data-dismiss","aria-label","onClick","aria-hidden","SuccessAlert","Alert_Alert","ErrorAlert","_ref3","resetAlert","show","count","incrementAlert","alert","showSuccessAlert","alerts","showAlert","showErrorAlert","updateAlert","hideSuccessAlert","hideErrorAlert","func","updatedAlerts","CartComponent","cart","undefined","loading","success","error","updateItem","item","event","cartItem","target","saveCartState","updateUpdateItemAlert","finally","calculateTotalPrice","items","reduce","acc","loadCart","orderItemDtos","updateCreateOrderAlert","isCartEmpty","alertFunction","alertType","_this2","_this$state","Alert_SuccessAlert","Alert_ErrorAlert","OrderItem_OrderItem","colSpan","Cart","User","loadUser","params","User_FieldView","label","address","country","FieldView","fetchProducts","getProduct","ProductComponent","loadProduct","addProduct","alt","description","Product","TextInput","fieldName","InputFields_FieldInput","PasswordInput","FieldInput","placeholder","htmlFor","login","customer","signup","saveSession","validateEmail","test","String","toLowerCase","SignupComponent","password","repeatPassword","defineProperty","validateForm","InputFields_TextInput","InputFields_PasswordInput","mapDispatchToProps","Signup","LoginComponent","aria-describedby","Login","Order","loadOrder","amount","orderEvents","orderEvent","eventDate","LinkToProduct","children","GridItem","GridItem_LinkToProduct","GridRow","productsRow","GridItem_GridItem","toMatrix","array","numCols","matrix","i","rowNumber","Math","floor","push","addElementToCell","ProductsComponent","products","loadProducts","grid","gridRow","GridRow_GridRow","Products","fetchSystemHealth","Loading","App","systemStatus","initialTimeoutPassed","loadSystemStatus","isSystemUp","services","service","setTimeout","Loading_Loading","Orders","orders","loadOrders","title","Orders_OrderRow","OrderRow","MyOrders","Orders_Orders","initialState","localStorage","getItem","appReducer","combineReducers","prevState","arguments","action","setItem","removeItem","removeSession","Logout","routing","react_router","path","component","exact","ReactDOM","render","es","store","createStore","applyMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,kGClBAC,EACE,KADFA,EAEK,QAFLA,EAGI,OAqBJC,EAAa,SAAAC,GAAe,OAAIA,GAAmBA,EAAgBC,IACrED,EAAgBE,OAASF,EAAgBG,MC6BvCC,EAASC,YAJS,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACtBD,EAAMG,iBAGEJ,CAjDS,SAAAK,GAAuB,IAArBV,EAAqBU,EAArBV,gBAEtB,OACIW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,oCAAtB,0BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCAAiCb,GAAG,qBAC/CU,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oDACgB,UAAzBd,EAAgBG,MACjBQ,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,KACIL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,UAA9B,UAEJP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,WAA9B,yBAIPnB,EAAWC,IACZW,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,KACIL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAE,UAAAC,OAAYnB,EAAgBC,KAAzD,YAEJU,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,SAA9B,SAEJP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,aAA9B,cAEJP,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,WAA9B,cAINnB,EAAWC,IACbW,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACVH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMH,UAAU,WAAWI,GAAG,UAA9B,mDCxClBE,EAAQ,SAAAC,GAAG,OAAIC,MAAMD,EAAK,CAC5BE,OAAQ,MACRC,QAAS,CACLC,OAAQ,sBAGXC,KAAKC,IAEJC,EAAS,SAACP,EAAKQ,GAAN,OAAeP,MAAMD,EAAK,CACrCE,OAAQ,OACRM,KAAMC,KAAKC,UAAUF,GACrBL,QAAS,CACLC,OAAU,mBACVO,eAAgB,sBAGnBN,KAAKC,IAYJA,EAAiB,SAAAM,GACnB,GAAIA,EAASC,GACT,OAAOD,EAASE,OAIpB,MADAC,QAAQC,IAAR,oBAAAlB,OAAgCc,EAASK,SACnC,IC9BJC,EAAkB,uCAElBC,EAAO,CACTC,aAAY,GAAAtB,OAAKoB,EAAL,iBACZG,YAAW,GAAAvB,OAAKoB,EAAL,gBACXI,UAAS,GAAAxB,OAAKoB,EAAL,cACTK,SAAQ,GAAAzB,OAAKoB,EAAL,cCPNM,EAAa,kBAAMzB,EAAK,GAAAD,OAAIqB,EAAKC,aAAT,gBACzBK,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,gCAAAlB,OAA4C4B,IACtC,MAGRC,EAAU,SAAA/C,GAAE,OAAImB,EAAK,GAAAD,OAAIqB,EAAKC,aAAT,eAAAtB,OAAmClB,IACzD6C,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,8BAAAlB,OAA0ClB,EAA1C,MAAAkB,OAAiD4B,IAC3C,MCRRE,cAEF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,KAAAJ,IACfE,EAAA5C,OAAA+C,EAAA,EAAA/C,CAAA8C,KAAA9C,OAAAgD,EAAA,EAAAhD,CAAA0C,GAAAO,KAAAH,KAAMH,KAKV5C,MAAQ,CACJmD,MAAO,IAPQN,EAUnBO,UAAY,kBAAMb,IACbnB,KAAK,SAAA+B,GAAK,OAAIN,EAAKQ,SAAS,CAACF,aAR9BN,EAAKO,YAHUP,wEAcf,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,mBACCwC,KAAK/C,MAAMmD,OAASJ,KAAK/C,MAAMmD,MAAMG,OAAS,GAC/CjD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BACjBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,WACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,iBACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,aACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,uBAGJlD,EAAAC,EAAAC,cAAA,aACCwC,KAAK/C,MAAMmD,MAAMK,IAAI,SAACC,EAAMC,GAAP,OAAerD,EAAAC,EAAAC,cAACoD,EAAD,CAASF,KAAMA,EAAMC,IAAKA,kBAhCvEE,IAAMC,WA2CpBC,EAAU,SAAA1D,GAAA,IAAEqD,EAAFrD,EAAEqD,KAAF,OACZpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACVH,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAOE,EAAK9D,IACtBU,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,UAAAC,OAAY4C,EAAK9D,KAAO8D,EAAK7D,QACzCS,EAAAC,EAAAC,cAAA,UAAKkD,EAAKM,UACV1D,EAAAC,EAAAC,cAAA,UAAKkD,EAAKO,QCjDZC,EAAa,SAAAC,GAAU,SAAArD,OAAOqB,EAAKI,SAAZ,eAAAzB,OAAkCqD,EAAlC,UAEvBC,EAAU,SAAAD,GAAU,OAAIpD,EAAMmD,EAAWC,IAC1C1B,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,uCAAAlB,OAAmDqD,EAAnD,MAAArD,OAAkE4B,IAC5D,MAGR2B,EAAiB,SAACF,EAAYG,GAAb,OAA2B/C,EAAM,GAAAT,OAAIoD,EAAWC,GAAf,SAAmCG,GACtF7B,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,qCAAAlB,OAAiDqD,EAAjD,MAAArD,OAAgE4B,IAC1D,MAGR6B,EAAoB,SAACJ,EAAYK,GAAb,OAAyBjD,EAAM,GAAAT,OAAIoD,EAAWC,GAAf,mBAA6CK,GACjG/B,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,qCAAAlB,OAAiDqD,EAAjD,MAAArD,OAAgE4B,IAC1D,cChBR+B,EAAY,SAAApE,GAA+C,IAA7CiE,EAA6CjE,EAA7CiE,UAAWI,EAAkCrE,EAAlCqE,SAAUC,EAAwBtE,EAAxBsE,SAAUC,EAAcvE,EAAduE,SACzCC,GAAkBP,EAAUQ,WAAWC,MAAQT,EAAUU,UAAUC,QAAQ,GAEjF,OACI3E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,aAAAC,OAAewD,EAAUQ,WAAWlF,KAAMU,EAAAC,EAAAC,cAAA,OAAK0E,IAAKZ,EAAUQ,WAAWK,aACrF7E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgB6D,EAAUQ,WAAWM,MACnD9E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA2B6D,EAAUQ,WAAWC,MAA9D,WACAzE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACTmE,EAAWN,EAAUU,SAClB1E,EAAAC,EAAAC,cAAC6E,EAAD,CAAkBL,SAAUV,EAAUU,SACpBN,SAAUA,EACVC,SAAUA,KAGpCrE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA2BoE,EAAzC,aAKNS,EAAmB,SAAAC,GAAA,IAAEP,EAAFO,EAAEP,SAAUN,EAAZa,EAAYb,SAAUC,EAAtBY,EAAsBZ,SAAtB,OACrBrE,EAAAC,EAAAC,cAAA,UAAQkE,SAAUA,EAAUC,SAAUA,EAAUa,MAAOR,GAClD9E,OAAAuF,EAAA,EAAAvF,CAAIwF,MAAM,IAAIC,QACVlC,IAAI,SAAAmC,GAAC,OAAItF,EAAAC,EAAAC,cAAA,UAAQgF,MAAOI,EAAGjC,IAAKiC,GAAIA,OC1B3CC,EAAiB,SAAAC,GAAU,OAC7BA,GAAcA,EAAWC,KAAK,SAACC,EAAKC,GAAN,OAAcD,EAAIlB,WAAWlF,GAAGsG,cAAcD,EAAInB,WAAWlF,OCCzFuG,EAAc,kBAAMpF,EAAK,GAAAD,OAAIqB,EAAKG,UAAT,aAC1BG,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,iCAAAlB,OAA6C4B,IACvC,MAGR0D,EAAW,SAAAxG,GAAE,OAAImB,EAAK,GAAAD,OAAIqB,EAAKG,UAAT,YAAAxB,OAA6BlB,IACpD6C,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,+BAAAlB,OAA2ClB,EAA3C,MAAAkB,OAAkD4B,IAC5C,MASR2D,EAAc,SAACC,EAAOnC,GAAR,OAAuB5C,EAAM,GAAAT,OAAIqB,EAAKG,UAAT,eAAAxB,OAAgCqD,EAAhC,YAAsDmC,GAClG7D,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,qCAAAlB,OAAiDqD,EAAjD,MAAArD,OAAgE4B,IAC1D,MCtBR6D,EAAQ,SAAAlG,GAAA,IAAEmG,EAAFnG,EAAEmG,KAAMC,EAARpG,EAAQoG,UAAW3G,EAAnBO,EAAmBP,KAAnB,OACVQ,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAK,OAAiBhB,EAAjB,sBAA2C4G,KAAK,SAC1DpG,EAAAC,EAAAC,cAAA,WAAMgG,GACNlG,EAAAC,EAAAC,cAAA,UAAQV,KAAK,SAASW,UAAU,QAAQkG,eAAa,QAAQC,aAAW,QAAQC,QAASJ,GACrFnG,EAAAC,EAAAC,cAAA,QAAMsG,cAAY,QAAlB,WAINC,EAAe,SAAAxB,GAAA,IAAEiB,EAAFjB,EAAEiB,KAAMC,EAARlB,EAAQkB,UAAR,OAAuBnG,EAAAC,EAAAC,cAACwG,EAAD,CAAOR,KAAMA,EAAMC,UAAWA,EAAW3G,KAAK,aAEpFmH,EAAa,SAAAC,GAAA,IAAEV,EAAFU,EAAEV,KAAMC,EAARS,EAAQT,UAAR,OAAuBnG,EAAAC,EAAAC,cAACwG,EAAD,CAAOR,KAAMA,EAAMC,UAAWA,EAAW3G,KAAK,YAElFqH,EAAa,iBAAO,CACtBC,MAAM,EACNC,MAAO,IAGLC,EAAiB,SAAAC,GAAK,MAAK,CAC7BH,MAAM,EACNC,MAAOE,EAAMF,MAAQ,IAGnBG,EAAmB,SAAAC,GAAM,OAAIC,EAAUD,EAAQ,YAE/CE,EAAiB,SAAAF,GAAM,OAAIC,EAAUD,EAAQ,UAE7CC,EAAY,SAACD,EAAQ3H,GAAT,OAAkB8H,EAAYH,EAAQ3H,EAAMwH,IAExDO,EAAmB,SAAAJ,GAAM,OAAIhB,EAAUgB,EAAQ,YAE/CK,EAAiB,SAAAL,GAAM,OAAIhB,EAAUgB,EAAQ,UAE7ChB,EAAY,SAACgB,EAAQ3H,GAAT,OAAkB8H,EAAYH,EAAQ3H,EAAMqH,IAExDS,EAAc,SAACH,EAAQ3H,EAAMiI,GAC/B,IAAMC,EAAa9H,OAAAC,EAAA,EAAAD,CAAA,GAAOuH,GAI1B,OAFAO,EAAclI,GAAQiI,EAAKN,EAAO3H,IAE3BkI,GCzBLC,cACF,SAAAA,EAAYpF,GAAO,IAAAC,EAAA,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,KAAAiF,IACfnF,EAAA5C,OAAA+C,EAAA,EAAA/C,CAAA8C,KAAA9C,OAAAgD,EAAA,EAAAhD,CAAA+H,GAAA9E,KAAAH,KAAMH,KAKV5C,MAAQ,CACJiI,UAAMC,EACNC,SAAS,EACTX,OAAQ,CACJpB,YAAa,CACTgC,QAASlB,IACTmB,MAAOnB,KAEXoB,WAAY,CACRF,QAASlB,IACTmB,MAAOnB,MAGfb,MAAO,IAnBQxD,EAsBnB4B,SAAW,SAAA8D,GAAI,OAAI,SAAAC,GACf3F,EAAKQ,SAAS,CAAC8E,SAAS,IAExB,IAAMM,EAAW,CACb5D,WAAY0D,EACZxD,SAAUyD,EAAME,OAAOnD,OAG3BnB,EAAevB,EAAKD,MAAMlD,gBAAgBC,GAAI8I,GACzCrH,KAAK,SAAA6G,GACFpF,EAAK8F,cAAcV,GACnBpF,EAAK+F,sBAAsBrB,KAE9B/E,MAAM,kBAAMK,EAAK+F,sBAAsBlB,KACvCmB,QAAQ,kBAAMhG,EAAKQ,SAAS,CAAC8E,SAAS,QApC5BtF,EAuCnBiG,oBAAsB,SAAAC,GAAK,OAAIA,EAC1BC,OAAO,SAACC,EAAKV,GAAN,OAAeU,EAAMV,EAAKxD,SAAWwD,EAAK1D,WAAWC,OAAO,IAxCrDjC,EA0CnBqG,SAAW,kBAAM/E,EAAQtB,EAAKD,MAAMlD,gBAAgBC,IAC/CyB,KAAKyB,EAAK8F,gBA3CI9F,EA6CnB8F,cAAgB,SAAAV,GACZA,EAAKkB,cAAgBvD,EAAeqC,EAAKkB,eACzCtG,EAAKQ,SAAS,CAAC4E,UA/CApF,EAkDnBuD,YAAc,WACVvD,EAAKQ,SAAS,CAAC8E,SAAS,IAExB/B,EAAYvD,EAAK7C,MAAMiI,KAAMpF,EAAKD,MAAMlD,gBAAgBC,IACnDyB,KAAK,SAAAiF,GACFxD,EAAKQ,SAAS,CAAC4E,KAAM,GAAI5B,UACzBxD,EAAKuG,uBAAuB7B,KAE/B/E,MAAM,kBAAMK,EAAKuG,uBAAuB1B,KACxCmB,QAAQ,kBAAMhG,EAAKQ,SAAS,CAAC8E,SAAS,OA3D5BtF,EA8DnBwG,YAAc,mBAAQxG,EAAK7C,MAAMiI,MAAQpF,EAAK7C,MAAMiI,KAAKkB,gBA9DtCtG,EAgEnBuG,uBAAyB,SAAAE,GAAa,OAAIzG,EAAK8E,YAAY,cAAe2B,IAhEvDzG,EAkEnB+F,sBAAwB,SAAAU,GAAa,OAAIzG,EAAK8E,YAAY,aAAc2B,IAlErDzG,EAoEnB8E,YAAc,SAAC4B,EAAWD,GACtB,IAAM9B,EAAMvH,OAAAC,EAAA,EAAAD,CAAA,GAAO4C,EAAK7C,MAAMwH,QAE9BA,EAAO+B,GAAaD,EAAczG,EAAK7C,MAAMwH,OAAO+B,IAEpD1G,EAAKQ,SAAS,CAACmE,OAAQA,KAtEvB3E,EAAKqG,WAHUrG,wEA4EV,IAAA2G,EAAAzG,KAAA0G,EACmB1G,KAAK/C,MAAtBwH,EADFiC,EACEjC,OAAQnB,EADVoD,EACUpD,MAEf,OACIhG,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,KACK8G,EAAOpB,YAAYgC,QAAQjB,MAC5B9G,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,IAAA1F,OAAM2G,EAAOpB,YAAYgC,QAAQhB,MAAjC,gBAAAvG,OAAqDwF,EAAM1G,GAA3D,mCACJ6G,UAAW,kBAAMgD,EAAKJ,uBAAuBxB,MAE1DJ,EAAOpB,YAAYiC,MAAMlB,MAC1B9G,EAAAC,EAAAC,cAACoJ,EAAD,CAAYpD,KAAI,IAAA1F,OAAM2G,EAAOpB,YAAYiC,MAAMjB,MAA/B,qDACJZ,UAAW,kBAAMgD,EAAKJ,uBAAuBvB,MAExDL,EAAOc,WAAWF,QAAQjB,MAC3B9G,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,IAAA1F,OAAM2G,EAAOc,WAAWF,QAAQhB,MAAhC,6CACJZ,UAAW,kBAAMgD,EAAKZ,sBAAsBhB,MAEzDJ,EAAOc,WAAWD,MAAMlB,MACzB9G,EAAAC,EAAAC,cAACoJ,EAAD,CAAYpD,KAAI,IAAA1F,OAAM2G,EAAOc,WAAWD,MAAMjB,MAA9B,oDACJZ,UAAW,kBAAMgD,EAAKZ,sBAAsBf,MAExDxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,mBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQV,KAAK,SACLW,UAAU,kBACVoG,QAAS7D,KAAKqD,YACd1B,SAAU3B,KAAKsG,eAAiBtG,KAAK/C,MAAMmI,SAHnD,mBAQNpF,KAAKsG,eACPhJ,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BACjBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,WACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,QACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,SACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,YACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,iBAGJlD,EAAAC,EAAAC,cAAA,aACCwC,KAAK/C,MAAMiI,KAAKkB,cAAc3F,IAAI,SAACiF,EAAU/E,GAAX,OAC/BrD,EAAAC,EAAAC,cAACqJ,EAAD,CAAWvF,UAAWoE,EACX/E,IAAKA,EACLe,SAAU+E,EAAK/E,SAASgE,EAAS5D,YACjCH,SAAU8E,EAAKxJ,MAAMmI,QACrBxD,UAAU,MAEzBtE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIsJ,QAAQ,IAAIrJ,UAAU,cACrBuC,KAAK+F,oBAAoB/F,KAAK/C,MAAMiI,KAAKkB,eAAenE,QAAQ,GADrE,yBAtIRpB,IAAMC,WAyJ5BiG,GAAO/J,YAJW,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACtBD,EAAMG,iBAGAJ,CAAyBiI,GCtKhC+B,eACF,SAAAA,EAAYnH,GAAO,IAAAC,EAAA,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,KAAAgH,IACflH,EAAA5C,OAAA+C,EAAA,EAAA/C,CAAA8C,KAAA9C,OAAAgD,EAAA,EAAAhD,CAAA8J,GAAA7G,KAAAH,KAAMH,KAKV5C,MAAQ,CACJyD,UAAMyE,GAPSrF,EAUnBmH,SAAW,kBAAMtH,EAAQG,EAAKD,MAAMrD,MAAM0K,OAAOtK,IAC5CyB,KAAK,SAAAqC,GAAI,OAAIZ,EAAKQ,SAAS,CAACI,YAR7BZ,EAAKmH,WAHUnH,wEAaV,IACEY,EAAQV,KAAK/C,MAAbyD,KAEP,OACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,kBAAUwC,KAAKH,MAAMrD,MAAM0K,OAAOtK,IACjC8D,GACDpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC2J,GAAD,CAAWC,MAAM,UAAU5E,MAAO9B,EAAK9D,KACvCU,EAAAC,EAAAC,cAAC2J,GAAD,CAAWC,MAAM,gBAAgB5E,MAAO9B,EAAK7D,QAC7CS,EAAAC,EAAAC,cAAC2J,GAAD,CAAWC,MAAM,YAAY5E,MAAO9B,EAAKM,WACzC1D,EAAAC,EAAAC,cAAC2J,GAAD,CAAWC,MAAM,UAAU5E,MAAO9B,EAAK2G,UACvC/J,EAAAC,EAAAC,cAAC2J,GAAD,CAAWC,MAAM,UAAU5E,MAAO9B,EAAK4G,UACvChK,EAAAC,EAAAC,cAAC2J,GAAD,CAAWC,MAAM,oBAAoB5E,MAAO9B,EAAKO,kBA7B1DJ,IAAMC,WAuCnByG,GAAY,SAAAlK,GAAA,IAAE+J,EAAF/J,EAAE+J,MAAO5E,EAATnF,EAASmF,MAAT,OACdlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BAA2B2J,GAC5C9J,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BAA2B+E,KC1C9CgF,GAAgB,kBAAMzJ,EAAK,GAAAD,OAAIqB,EAAKE,YAAT,eAC5BI,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,oCAAAlB,OAAgD4B,IAC1C,MAGR+H,GAAa,SAAA7K,GAAE,OAAImB,EAAK,GAAAD,OAAIqB,EAAKE,YAAT,cAAAvB,OAAiClB,IAC1D6C,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,iCAAAlB,OAA6ClB,EAA7C,MAAAkB,OAAoD4B,IAC9C,MCGRgI,eACF,SAAAA,EAAY7H,GAAO,IAAAC,EAAA,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,KAAA0H,IACf5H,EAAA5C,OAAA+C,EAAA,EAAA/C,CAAA8C,KAAA9C,OAAAgD,EAAA,EAAAhD,CAAAwK,GAAAvH,KAAAH,KAAMH,KAKV5C,MAAQ,CACJuE,aAAS2D,EACTC,SAAS,EACTX,OAAQ,CACJY,QAASlB,IACTmB,MAAOnB,MAXIrE,EAenB6H,YAAc,kBAAMF,GAAW3H,EAAKD,MAAMrD,MAAM0K,OAAOtK,IAClDyB,KAAK,SAAAmD,GAAO,OAAI1B,EAAKQ,SAAS,CAACkB,eAhBjB1B,EAkBnB8H,WAAa,WACT9H,EAAKQ,SAAS,CAAC8E,SAAS,IAExB7D,EAAkBzB,EAAKD,MAAMlD,gBAAgBC,GAAIkD,EAAK7C,MAAMuE,SACvDnD,KAAKyB,EAAK0E,kBACV/E,MAAMK,EAAK6E,gBACXmB,QAAQ,kBAAMhG,EAAKQ,SAAS,CAAC8E,SAAS,OAxB5BtF,EA2BnB0E,iBAAmB,kBAAM1E,EAAKQ,SAAS,CAACmE,OAAQD,EAAiB1E,EAAK7C,MAAMwH,WA3BzD3E,EA6BnB6E,eAAiB,kBAAM7E,EAAKQ,SAAS,CAACmE,OAAQE,EAAe7E,EAAK7C,MAAMwH,WA7BrD3E,EA+BnB+E,iBAAmB,kBAAM/E,EAAKQ,SAAS,CAACmE,OAAQI,EAAiB/E,EAAK7C,MAAMwH,WA/BzD3E,EAiCnBgF,eAAiB,kBAAMhF,EAAKQ,SAAS,CAACmE,OAAQK,EAAehF,EAAK7C,MAAMwH,WAjCrD3E,EAmCnBpD,WAAa,kBAAMA,EAAWoD,EAAKD,MAAMlD,kBAhCrCmD,EAAK6H,cAHU7H,wEAqCV,IAAA4G,EACqB1G,KAAK/C,MAAxBuE,EADFkF,EACElF,QAASiD,EADXiC,EACWjC,OAEhB,OACInH,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,KACK8G,EAAOY,QAAQjB,MAChB9G,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,IAAA1F,OAAM2G,EAAOY,QAAQhB,MAArB,8CACJZ,UAAWzD,KAAK6E,mBAE7BJ,EAAOa,MAAMlB,MACd9G,EAAAC,EAAAC,cAACoJ,EAAD,CAAYpD,KAAI,IAAA1F,OAAM2G,EAAOa,MAAMjB,MAAnB,qDACJZ,UAAWzD,KAAK8E,iBAE5BxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACV+D,GACDlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAK0E,IAAKV,EAAQW,SAAU0F,IAAI,MAEpCvK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAwB+D,EAAQY,MAC9C9E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAwB+D,EAAQO,MAA9C,WACAzE,EAAAC,EAAAC,cAAA,WAAMgE,EAAQsG,cAElBxK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQV,KAAK,SACLW,UAAU,kBACVkE,SAAU3B,KAAK/C,MAAMmI,UAAYpF,KAAKtD,aACtCmH,QAAS7D,KAAK4H,YAHtB,2BAhED/G,IAAMC,WAoF/BiH,GAAU/K,YAJQ,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACtBD,EAAMG,iBAGGJ,CAAyB0K,aChGnCM,GAAY,SAAA3K,GAAA,IAAE4K,EAAF5K,EAAE4K,UAAWb,EAAb/J,EAAa+J,MAAO1F,EAApBrE,EAAoBqE,SAAUC,EAA9BtE,EAA8BsE,SAA9B,OACdrE,EAAAC,EAAAC,cAAC0K,GAAD,CAAYD,UAAWA,EAAWb,MAAOA,EAAO1F,SAAUA,EAAUC,SAAUA,EAAU7E,KAAK,UAE3FqL,GAAgB,SAAA5F,GAAA,IAAE0F,EAAF1F,EAAE0F,UAAWb,EAAb7E,EAAa6E,MAAO1F,EAApBa,EAAoBb,SAAUC,EAA9BY,EAA8BZ,SAA9B,OAClBrE,EAAAC,EAAAC,cAAC0K,GAAD,CAAYD,UAAWA,EAAWb,MAAOA,EAAO1F,SAAUA,EAAUC,SAAUA,EAAU7E,KAAK,cAE3FsL,GAAa,SAAAlE,GAAA,IAAE+D,EAAF/D,EAAE+D,UAAWb,EAAblD,EAAakD,MAAOtK,EAApBoH,EAAoBpH,KAAMuL,EAA1BnE,EAA0BmE,YAAa3G,EAAvCwC,EAAuCxC,SAAUC,EAAjDuC,EAAiDvC,SAAjD,OACfrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,SAAO8K,QAASL,EAAWxK,UAAU,2BAA2B2J,GAChE9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SAAOV,KAAMA,EACNW,UAAU,eACVb,GAAIqL,EACJvG,SAAUA,EACVC,SAAUA,EACV0G,YAAaA,OCf1BE,GAAQ,SAAAC,GAAQ,OAAIjK,EAAM,GAAAT,OAAIqB,EAAKC,aAAT,WAAgCoJ,GAC3D/I,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,6BAAAlB,OAAyC0K,EAAS3L,MAAlD,MAAAiB,OAA4D4B,IACtD,MAGR+I,GAAS,SAAAD,GAAQ,OAAIjK,EAAM,GAAAT,OAAIqB,EAAKC,aAAT,YAAiCoJ,GAC7D/I,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,+BAAAlB,OAA2C0K,EAAS3L,MAApD,MAAAiB,OAA8D4B,IACxD,MCTRgJ,GAAc,SAAA/L,GAAe,MAAK,CACpCG,KAJ0B,wBAK1BH,oBCLEgM,GAAgB,SAAA9L,GAElB,MADW,0JACD+L,KAAKC,OAAOhM,GAAOiM,gBCe3BC,8MAEF9L,MAAQ,CACJuL,SAAU,CACN3L,MAAO,GACPmM,SAAU,GACVC,eAAgB,GAChBjI,SAAU,GACVqG,QAAS,GACTC,QAAS,IAEb7C,OAAQ,CACJY,QAASlB,IACTmB,MAAOnB,QAIfsE,OAAS,kBAAMA,GAAO3I,EAAK7C,MAAMuL,UAC5BnK,KAAK,SAAAmK,GACF1I,EAAKD,MAAM6I,YAAYF,GACvB1I,EAAK0E,qBAER/E,MAAMK,EAAK6E,mBAEhBjD,SAAW,SAAA+D,GAAK,OAAI3F,EAAKQ,SAAS,CAC9BkI,SAAStL,OAAAC,EAAA,EAAAD,CAAA,GACF4C,EAAK7C,MAAMuL,SADVtL,OAAAgM,GAAA,EAAAhM,CAAA,GAEHuI,EAAME,OAAO/I,GAAK6I,EAAME,OAAOnD,aAIxC2G,aAAe,mBAAQrJ,EAAK7C,MAAMuL,SAAS3L,SACrCiD,EAAK7C,MAAMuL,SAASQ,UACtBlJ,EAAK7C,MAAMuL,SAASQ,WAAalJ,EAAK7C,MAAMuL,SAASS,kBACnDnJ,EAAK7C,MAAMuL,SAASxH,YACpBlB,EAAK7C,MAAMuL,SAASnB,WACpBvH,EAAK7C,MAAMuL,SAASlB,SACtBqB,GAAc7I,EAAK7C,MAAMuL,SAAS3L,SACjCiD,EAAKpD,gBAEV8H,iBAAmB,kBAAM1E,EAAKQ,SAAS,CAACmE,OAAQD,EAAiB1E,EAAK7C,MAAMwH,aAE5EE,eAAiB,kBAAM7E,EAAKQ,SAAS,CAACmE,OAAQE,EAAe7E,EAAK7C,MAAMwH,aAExEI,iBAAmB,kBAAM/E,EAAKQ,SAAS,CAACmE,OAAQI,EAAiB/E,EAAK7C,MAAMwH,aAE5EK,eAAiB,kBAAMhF,EAAKQ,SAAS,CAACmE,OAAQK,EAAehF,EAAK7C,MAAMwH,aAExE/H,WAAa,kBAAMA,EAAWoD,EAAKD,MAAMlD,0FAEhC,IACE8H,EAAUzE,KAAK/C,MAAfwH,OAEP,OACInH,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,MACM8G,EAAOY,QAAQjB,MAAQpE,KAAKtD,cAC9BY,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,gDACJC,UAAWzD,KAAK6E,mBAE7BJ,EAAOY,QAAQjB,MAChB9G,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,IAAA1F,OAAM2G,EAAOY,QAAQhB,MAArB,oDACJZ,UAAWzD,KAAK6E,mBAE7BJ,EAAOa,MAAMlB,MACd9G,EAAAC,EAAAC,cAACoJ,EAAD,CAAYpD,KAAI,IAAA1F,OAAM2G,EAAOa,MAAMjB,MAAnB,2DACJZ,UAAWzD,KAAK8E,iBAE5BxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC4L,GAAD,CAAWnB,UAAU,QACVb,MAAM,gBACNzF,SAAU3B,KAAKtD,aACfgF,SAAU1B,KAAK0B,WAC1BpE,EAAAC,EAAAC,cAAC6L,GAAD,CAAepB,UAAU,WACVb,MAAM,WACNzF,SAAU3B,KAAKtD,aACfgF,SAAU1B,KAAK0B,WAC9BpE,EAAAC,EAAAC,cAAC6L,GAAD,CAAepB,UAAU,iBACVb,MAAM,kBACNzF,SAAU3B,KAAKtD,aACfgF,SAAU1B,KAAK0B,WAC9BpE,EAAAC,EAAAC,cAAC4L,GAAD,CAAWnB,UAAU,WACVb,MAAM,YACNzF,SAAU3B,KAAKtD,aACfgF,SAAU1B,KAAK0B,WAC1BpE,EAAAC,EAAAC,cAAC4L,GAAD,CAAWnB,UAAU,UACVb,MAAM,UACNzF,SAAU3B,KAAKtD,aACfgF,SAAU1B,KAAK0B,WAC1BpE,EAAAC,EAAAC,cAAC4L,GAAD,CAAWnB,UAAU,UACVb,MAAM,UACNzF,SAAU3B,KAAKtD,aACfgF,SAAU1B,KAAK0B,WAC1BpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UAAQV,KAAK,SACL+G,QAAS7D,KAAKyI,OACd9G,UAAW3B,KAAKmJ,eAChB1L,UAAU,mBAHlB,yBAjGVoD,IAAMC,WAsH9BwI,GAAqB,CAACZ,gBAEtBa,GAASvM,YANS,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACtBD,EAAMG,iBAK2BkM,GAAzBtM,CAA6C+L,ICxHtDS,8MAEFvM,MAAQ,CACJuL,SAAU,CACN3L,MAAO,GACPmM,SAAU,IAEdvE,OAAQ,CACJY,QAASlB,IACTmB,MAAOnB,QAIfoE,MAAQ,kBAAMA,GAAMzI,EAAK7C,MAAMuL,UAC1BnK,KAAK,SAAAmK,GACF1I,EAAKD,MAAM6I,YAAYF,GACvB1I,EAAK0E,qBAER/E,MAAMK,EAAK6E,mBAEhBjD,SAAW,SAAA+D,GAAK,OAAI3F,EAAKQ,SAAS,CAC9BkI,SAAStL,OAAAC,EAAA,EAAAD,CAAA,GACF4C,EAAK7C,MAAMuL,SADVtL,OAAAgM,GAAA,EAAAhM,CAAA,GAEHuI,EAAME,OAAO/I,GAAK6I,EAAME,OAAOnD,aAIxC2G,aAAe,mBAAQrJ,EAAK7C,MAAMuL,YAC5B1I,EAAK7C,MAAMuL,SAAS3L,SACpBiD,EAAK7C,MAAMuL,SAASQ,UACtBL,GAAc7I,EAAK7C,MAAMuL,SAAS3L,SACjCiD,EAAKpD,gBAEV8H,iBAAmB,kBAAM1E,EAAKQ,SAAS,CAACmE,OAAQD,EAAiB1E,EAAK7C,MAAMwH,aAE5EE,eAAiB,kBAAM7E,EAAKQ,SAAS,CAACmE,OAAQE,EAAe7E,EAAK7C,MAAMwH,aAExEI,iBAAmB,kBAAM/E,EAAKQ,SAAS,CAACmE,OAAQI,EAAiB/E,EAAK7C,MAAMwH,aAE5EK,eAAiB,kBAAMhF,EAAKQ,SAAS,CAACmE,OAAQK,EAAehF,EAAK7C,MAAMwH,aAExE/H,WAAa,kBAAMA,EAAWoD,EAAKD,MAAMlD,0FAEhC,IACE8H,EAAUzE,KAAK/C,MAAfwH,OAEP,OACInH,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,MACM8G,EAAOY,QAAQjB,MAAQpE,KAAKtD,cAC9BY,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,gDACJC,UAAWzD,KAAK6E,mBAE7BJ,EAAOY,QAAQjB,MAChB9G,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,IAAA1F,OAAM2G,EAAOY,QAAQhB,MAArB,2CACJZ,UAAWzD,KAAK6E,mBAE7BJ,EAAOa,MAAMlB,MACd9G,EAAAC,EAAAC,cAACoJ,EAAD,CAAYpD,KAAI,IAAA1F,OAAM2G,EAAOa,MAAMjB,MAAnB,kDACJZ,UAAWzD,KAAK8E,iBAE5BxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAO8K,QAAQ,SAAf,iBACAhL,EAAAC,EAAAC,cAAA,SAAOV,KAAK,QACLW,UAAU,eACVb,GAAG,QACH6M,mBAAiB,YACjB9H,SAAU3B,KAAKtD,aACfgF,SAAU1B,KAAK0B,SACf2G,YAAY,iBAEvB/K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAO8K,QAAQ,YAAf,YACAhL,EAAAC,EAAAC,cAAA,SAAOV,KAAK,WACLW,UAAU,eACVb,GAAG,WACH+E,SAAU3B,KAAKtD,aACfgF,SAAU1B,KAAK0B,SACf2G,YAAY,cAEvB/K,EAAAC,EAAAC,cAAA,UAAQV,KAAK,SACL6E,UAAW3B,KAAKmJ,eAChBtF,QAAS7D,KAAKuI,MACd9K,UAAU,6BAHlB,aASZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,MACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAG,WACLP,EAAAC,EAAAC,cAAA,UAAQV,KAAK,SACLW,UAAU,4BACVkE,SAAU3B,KAAKtD,cAFvB,uBAxGHmE,IAAMC,WA0H7BwI,GAAqB,CAACZ,gBAEtBgB,GAAQ1M,YANU,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACtBD,EAAMG,iBAK0BkM,GAAzBtM,CAA6CwM,ICvIrDG,eACF,SAAAA,EAAY9J,GAAO,IAAAC,EAAA,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,KAAA2J,IACf7J,EAAA5C,OAAA+C,EAAA,EAAA/C,CAAA8C,KAAA9C,OAAAgD,EAAA,EAAAhD,CAAAyM,GAAAxJ,KAAAH,KAAMH,KAKV5C,MAAQ,CACJqG,WAAO6B,GAPQrF,EAUnB8J,UAAY,kBAAMxG,EAAStD,EAAKD,MAAMrD,MAAM0K,OAAOtK,IAC9CyB,KAAK,SAAAiF,GACFA,EAAM8C,cAAgBvD,EAAeS,EAAM8C,eAC3CtG,EAAKQ,SAAS,CAACgD,aAVnBxD,EAAK8J,YAHU9J,wEAiBf,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,mBAAWwC,KAAKH,MAAMrD,MAAM0K,OAAOtK,IAClCoD,KAAK/C,MAAMqG,OAAStD,KAAK/C,MAAMqG,MAAM8C,eACtC9I,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BACjBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,WACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,QACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,SACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,YACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,iBAGJlD,EAAAC,EAAAC,cAAA,aACCwC,KAAK/C,MAAMqG,MAAM8C,cAAc3F,IAAI,SAACa,EAAWX,GAAZ,OAChCrD,EAAAC,EAAAC,cAACqJ,EAAD,CAAWvF,UAAWA,EACXX,IAAKA,EACLiB,UAAU,MAEzBtE,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIsJ,QAAQ,IAAIrJ,UAAU,cACrBuC,KAAK/C,MAAMqG,MAAMuG,OADtB,cAORvM,EAAAC,EAAAC,cAAA,oBACCwC,KAAK/C,MAAM6M,aACZxM,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BACjBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,UACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,UAGJlD,EAAAC,EAAAC,cAAA,aACCwC,KAAK/C,MAAM6M,YAAYrJ,IAAI,SAACsJ,EAAYpJ,GAAb,OACxBrD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,wBAAwBkD,IAAG,UAAA7C,OAAY6C,IACjDrD,EAAAC,EAAAC,cAAA,UAAKuM,EAAW9K,QAChB3B,EAAAC,EAAAC,cAAA,UAAKuM,EAAWC,cAGxB1M,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIsJ,QAAQ,IAAIrJ,UAAU,cACrBuC,KAAK/C,MAAMqG,MAAMuG,OADtB,wBAjEZhJ,IAAMC,WCHpBmJ,GAAgB,SAAA5M,GAAA,IAAE6M,EAAF7M,EAAE6M,SAAUtN,EAAZS,EAAYT,GAAZ,OAAoBU,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,aAAAC,OAAelB,IAAOsN,IAElEC,GAAW,SAAA5H,GAAA,IAAEf,EAAFe,EAAEf,QAASoG,EAAXrF,EAAWqF,WAAYjG,EAAvBY,EAAuBZ,SAAvB,OACbrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC4M,GAAD,CAAexN,GAAI4E,EAAQ5E,IAAIU,EAAAC,EAAAC,cAAA,OAAK0E,IAAKV,EAAQW,SAAU0F,IAAI,OACpEvK,EAAAC,EAAAC,cAAC4M,GAAD,CAAexN,GAAI4E,EAAQ5E,IAAK4E,EAAQY,MACxC9E,EAAAC,EAAAC,cAAA,WAAMgE,EAAQO,MAAd,WACAzE,EAAAC,EAAAC,cAAA,UAAQV,KAAK,SACLW,UAAU,kBACVkE,SAAUA,EACVkC,QAAS,kBAAM+D,EAAWpG,KAHlC,kBCRN6I,GAAU,SAAAhN,GAAA,IAAEiN,EAAFjN,EAAEiN,YAAa1C,EAAfvK,EAAeuK,WAAYjG,EAA3BtE,EAA2BsE,SAA3B,OACZrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACV6M,EAAY7J,IAAI,SAACe,EAASb,GAAV,OAAkBrD,EAAAC,EAAAC,cAAC+M,GAAD,CAAU/I,QAASA,EACToG,WAAYA,EACZjG,SAAUA,EACVhB,IAAKA,QCQpD6J,GAAW,SAACC,EAAOC,GACrB,GAAKD,EAAL,CAGA,IAUME,EAAS,GAIf,OAFAF,EAAMhK,IAAI,SAACmC,EAAGgI,GAAJ,OAZe,SAACH,EAAO7H,EAAGgI,GAChC,IAAMC,EAAYC,KAAKC,MAAMH,EAAIF,GAE7BE,EAAIF,IAAY,IAChBD,EAAMI,GAAa,IAGvBJ,EAAMI,GAAWG,KAAKpI,GAKNqI,CAAiBN,EAAQ/H,EAAGgI,KAEzCD,IAILO,eAEF,SAAAA,EAAYrL,GAAO,IAAAC,EAAA,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,KAAAkL,IACfpL,EAAA5C,OAAA+C,EAAA,EAAA/C,CAAA8C,KAAA9C,OAAAgD,EAAA,EAAAhD,CAAAgO,GAAA/K,KAAAH,KAAMH,KAKV5C,MAAQ,CACJkO,SAAU,GACV/F,SAAS,EACTX,OAAQ,CACJY,QAASlB,IACTmB,MAAOnB,MAXIrE,EAenBsL,aAAe,kBAAM5D,KAChBnJ,KAAK,SAAA8M,GAAQ,OAAIrL,EAAKQ,SAAS,CAAC6K,gBAhBlBrL,EAmBnB8H,WAAa,SAAApG,GACT1B,EAAKQ,SAAS,CAAC8E,SAAS,IAExB7D,EAAkBzB,EAAKD,MAAMlD,gBAAgBC,GAAI4E,GAC5CnD,KAAKyB,EAAK0E,kBACV/E,MAAMK,EAAK6E,gBACXmB,QAAQ,kBAAMhG,EAAKQ,SAAS,CAAC8E,SAAS,OAzB5BtF,EA4BnB0E,iBAAmB,kBAAM1E,EAAKQ,SAAS,CAACmE,OAAQD,EAAiB1E,EAAK7C,MAAMwH,WA5BzD3E,EA8BnB6E,eAAiB,kBAAM7E,EAAKQ,SAAS,CAACmE,OAAQE,EAAe7E,EAAK7C,MAAMwH,WA9BrD3E,EAgCnB+E,iBAAmB,kBAAM/E,EAAKQ,SAAS,CAACmE,OAAQI,EAAiB/E,EAAK7C,MAAMwH,WAhCzD3E,EAkCnBgF,eAAiB,kBAAMhF,EAAKQ,SAAS,CAACmE,OAAQK,EAAehF,EAAK7C,MAAMwH,WAlCrD3E,EAoCnBpD,WAAa,kBAAMA,EAAWoD,EAAKD,MAAMlD,kBAjCrCmD,EAAKsL,eAHUtL,wEAsCV,IAAA2G,EAAAzG,KACCqL,EAAOb,GAASxK,KAAK/C,MAAMkO,SAAU,GACpC1G,EAAUzE,KAAK/C,MAAfwH,OAEP,OACIzE,KAAK/C,MAAMkO,UACX7N,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,KACK8G,EAAOY,QAAQjB,MAChB9G,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,IAAA1F,OAAM2G,EAAOY,QAAQhB,MAArB,8CACJZ,UAAWzD,KAAK6E,mBAE7BJ,EAAOa,MAAMlB,MACd9G,EAAAC,EAAAC,cAACoJ,EAAD,CAAYpD,KAAI,IAAA1F,OAAM2G,EAAOa,MAAMjB,MAAnB,qDACJZ,UAAWzD,KAAK8E,iBAE5BxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAEP4N,EAAK5K,IAAI,SAAC6K,EAAS3K,GAAV,OACLrD,EAAAC,EAAAC,cAAC+N,GAAD,CAASjB,YAAagB,EACb1D,WAAYnB,EAAKmB,WACjBjG,SAAU8E,EAAKxJ,MAAMmI,UAAYqB,EAAK/J,aACtCiE,IAAKA,eA7DVE,IAAMC,WAyEhC0K,GAAWxO,YAJO,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACtBD,EAAMG,iBAGIJ,CAAyBkO,IC5GpCO,GAAoB,kBAAM1N,EAAK,GAAAD,OAAIoB,EAAJ,mBAChCO,MAAM,SAAAC,GAAC,OAAIX,QAAQC,IAAR,wCAAAlB,OAAoD4B,OCF9DgM,GAAU,kBAAMpO,EAAAC,EAAAC,cAAA,+FCGhBmO,eAEF,SAAAA,EAAY9L,GAAO,IAAAC,EAAA,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,KAAA2L,IACf7L,EAAA5C,OAAA+C,EAAA,EAAA/C,CAAA8C,KAAA9C,OAAAgD,EAAA,EAAAhD,CAAAyO,GAAAxL,KAAAH,KAAMH,KAMV5C,MAAQ,CACJ2O,kBAAczG,EACd0G,sBAAsB,GATP/L,EAYnBgM,iBAAmB,kBAAML,KACpBpN,KAAK,SAAAuN,GAAY,OAAI9L,EAAKQ,SAAS,CAACsL,oBAbtB9L,EAenBiM,WAAa,kBAAMjM,EAAK7C,MAAM2O,cAC1B9L,EAAK7C,MAAM2O,aAAaI,SACnBvL,IAAI,SAAAwL,GAAO,OAAIA,EAAQhN,SACvBgH,OAAO,SAACC,EAAKjH,GAAN,MAA4B,OAAXA,GAAmBiH,IAAK,IAfrDpG,EAAKgM,mBACLI,WAAW,kBAAMpM,EAAKQ,SAAS,CAACuL,sBAAsB,KAAQ,KAJ/C/L,wEAqBf,OACIxC,EAAAC,EAAAC,cAACF,EAAAC,EAAMI,SAAP,KACKqC,KAAK+L,cAAgBzO,EAAAC,EAAAC,cAACgO,GAAD,OACpBxL,KAAK+L,cAAgB/L,KAAK/C,MAAM4O,sBAAwBvO,EAAAC,EAAAC,cAAC2O,GAAD,cA1BxDtL,IAAMC,WCFlBsL,eAEF,SAAAA,EAAYvM,GAAO,IAAAC,EAAA,OAAA5C,OAAA6C,EAAA,EAAA7C,CAAA8C,KAAAoM,IACftM,EAAA5C,OAAA+C,EAAA,EAAA/C,CAAA8C,KAAA9C,OAAAgD,EAAA,EAAAhD,CAAAkP,GAAAjM,KAAAH,KAAMH,KAKV5C,MAAQ,CACJoP,OAAQ,IAPOvM,EAUnBwM,WAAa,kBAAMxM,EAAKD,MAAMsD,cACzB9E,KAAK,SAAAgO,GAAM,OAAIvM,EAAKQ,SAAS,CAAC+L,cAR/BvM,EAAKwM,aAHUxM,wEAaV,IACEuM,EAAUrM,KAAK/C,MAAfoP,OACP,OACI/O,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAKwC,KAAKH,MAAM0M,OACfF,GAAUA,EAAO9L,OAAS,GAC3BjD,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,2BACjBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,YACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,WACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,eACAlD,EAAAC,EAAAC,cAAA,MAAIgD,MAAM,OAAV,mBAGJlD,EAAAC,EAAAC,cAAA,aACC6O,EAAO5L,IAAI,SAAC6C,EAAO3C,GAAR,OAAgBrD,EAAAC,EAAAC,cAACgP,GAAD,CAAUlJ,MAAOA,EAAO3C,IAAKA,kBAjChEE,IAAMC,WA4CrB2L,GAAW,SAAApP,GAAA,IAAEiG,EAAFjG,EAAEiG,MAAF,OACbhG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,WAAAC,OAAawF,EAAM1G,KAAO0G,EAAM1G,KAC5CU,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,GAAE,UAAAC,OAAYwF,EAAMnC,aAAemC,EAAMnC,aACnD7D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAc6F,EAAMuG,OAAlC,WACAvM,EAAAC,EAAAC,cAAA,UAAK8F,EAAMrC,QCvCbyL,GAAW1P,YAJO,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACtBD,EAAMG,iBAGIJ,CARS,SAAAK,GAAA,IAAEV,EAAFU,EAAEV,gBAAF,OAAuBW,EAAAC,EAAAC,cAACmP,GAAD,CAAQxJ,YAAa,kBpBU1ChC,EoBVoExE,EAAgBC,GpBUtEmB,EAAK,GAAAD,OAAIqB,EAAKG,UAAT,eAAAxB,OAAgCqD,EAAhC,aAC1C1B,MAAM,SAAAC,GAEH,MADAX,QAAQC,IAAR,6CAAAlB,OAAyDqD,EAAzD,MAAArD,OAAwE4B,IAClE,KAHc,IAAAyB,GoBTGoL,MAAM,kCCH/BK,GAAe,CACjBjQ,gB9Bc+B,CAC/BC,GAAIiQ,aAAaC,QAAQrQ,GACzBI,MAAOgQ,aAAaC,QAAQrQ,GAC5BK,KAAM+P,aAAaC,QAAQrQ,K+BlBzBsQ,GAAaC,aAAgB,CAC/B5P,eDGmB,WAAsC,I9BDjCoL,E8BCJyE,EAAqCC,UAAA3M,OAAA,QAAA4E,IAAA+H,UAAA,GAAAA,UAAA,GAAzBN,GAAcO,EAAWD,UAAA3M,OAAA,EAAA2M,UAAA,QAAA/H,EACzD,OAAQgI,EAAOrQ,MAEX,IbVsB,wBaalB,O9BPgB0L,E8BKI2E,EAAOxQ,iB9BJ1BC,IAAMiQ,aAAaO,QAAQ3Q,EAAkB+L,EAAS5L,IAC/D4L,EAAS3L,OAASgQ,aAAaO,QAAQ3Q,EAAqB+L,EAAS3L,OACrE2L,EAAS1L,MAAQ+P,aAAaO,QAAQ3Q,EAAoB+L,EAAS1L,M8BIpDI,OAAAC,EAAA,EAAAD,CAAA,GACA+P,EADP,CAEItQ,gBAAiBwQ,EAAOxQ,kBAIhC,IblBwB,0BaqBpB,O9BTRkQ,aAAaQ,WAAW5Q,GACxBoQ,aAAaQ,WAAW5Q,GACxBoQ,aAAaQ,WAAW5Q,G8BOTS,OAAAC,EAAA,EAAAD,CAAA,GACA+P,EADP,CAEItQ,gBAAiB,KAGzB,QACI,OAAOsQ,MEfb3D,GAAqB,CAACgE,cfLN,iBAAO,CACzBxQ,KAR4B,6Bec1ByQ,GAASvQ,iBAAQmI,EAAWmE,GAAnBtM,CAVS,SAAAK,GAGpB,OAFAiQ,EADyCjQ,EAAnBiQ,iBAIlBhQ,EAAAC,EAAAC,cAACmJ,EAAD,CAAcnD,KAAI,wCCapBgK,GACFlQ,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACT,EAAD,MACAO,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,KACInQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWjE,KAChCpM,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWJ,KACjCjQ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAWpE,KACjCjM,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAW5G,KAC/BzJ,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWhE,KACrCrM,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,UAAUC,UC3BhB,kBAAMrQ,EAAAC,EAAAC,cAACmP,GAAD,CAAQxJ,YAAaA,EAAaoJ,MAAM,2BD4BpDjP,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWjB,KACnCpP,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAW3G,KACpC1J,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAW/N,IAChCtC,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOC,KAAK,gBAAgBC,UAAW5F,KACvCzK,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOG,OAAK,EAACF,KAAK,IAAIC,UAAWhC,KACjCrO,EAAAC,EAAAC,cAACiQ,EAAA,EAAD,CAAOE,UEnCF,kBAAMrQ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BAAd,kBFwCvBoQ,IAASC,OACLxQ,EAAAC,EAAAC,cAACuQ,EAAA,EAAD,CAAUC,MGrCHC,aACHlB,GACAmB,aAAgBC,QHoCfX,IAELY,SAASC,eAAe,SlCmFtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnQ,KAAK,SAAAoQ,GACjCA,EAAaC","file":"static/js/main.a5aeecff.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SESSION_ITEMS = {\n    ID: 'id',\n    EMAIL: 'email',\n    TYPE: 'type'\n};\n\nconst saveCustomerSession = customer => {\n    customer.id && localStorage.setItem(SESSION_ITEMS.ID, customer.id);\n    customer.email && localStorage.setItem(SESSION_ITEMS.EMAIL, customer.email);\n    customer.type && localStorage.setItem(SESSION_ITEMS.TYPE, customer.type);\n};\n\nconst removeCustomerSession = () => {\n    localStorage.removeItem(SESSION_ITEMS.ID);\n    localStorage.removeItem(SESSION_ITEMS.EMAIL);\n    localStorage.removeItem(SESSION_ITEMS.TYPE);\n};\n\nconst loadCustomerSession = () => ({\n    id: localStorage.getItem(SESSION_ITEMS.ID),\n    email: localStorage.getItem(SESSION_ITEMS.EMAIL),\n    type: localStorage.getItem(SESSION_ITEMS.TYPE)\n});\n\nconst isLoggedIn = sessionCustomer => sessionCustomer && sessionCustomer.id &&\n    sessionCustomer.email && sessionCustomer.type;\n\nexport {saveCustomerSession, removeCustomerSession, loadCustomerSession, isLoggedIn}","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {isLoggedIn} from \"./customerSession\";\n\nconst NavbarComponent = ({sessionCustomer}) => {\n\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n            <a href=\"/\" className=\"navbar-brand d-flex w-50 mr-auto\">Boardgames online shop</a>\n            <div className=\"navbar-collapse collapse w-100\" id=\"collapsingNavbar3\">\n                <ul className=\"nav navbar-nav ml-auto w-100 justify-content-end\">\n                    {sessionCustomer.type === 'ADMIN' &&\n                    <React.Fragment>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/users\">Users</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/orders\">All customer orders</Link>\n                        </li>\n                    </React.Fragment>\n                    }\n                    {isLoggedIn(sessionCustomer) &&\n                    <React.Fragment>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to={`/users/${sessionCustomer.id}`}>Profile</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/cart\">Cart</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/myOrders\">My Orders</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/logout\">Log out</Link>\n                        </li>\n                    </React.Fragment>\n                    }\n                    {!isLoggedIn(sessionCustomer) &&\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/login\">Log in</Link>\n                    </li>\n                    }\n                </ul>\n            </div>\n        </nav>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n    ...state.sessionReducer\n});\n\nconst Navbar = connect(mapStateToProps)(NavbarComponent);\n\nexport {Navbar};","const doGet = url => fetch(url, {\n    method: 'GET',\n    headers: {\n        Accept: 'application/json'\n    }\n})\n    .then(handleResponse);\n\nconst doPost = (url, body) => fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    }\n})\n    .then(handleResponse);\n\nconst doPut = (url, body) => fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(body),\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    }\n})\n    .then(handleResponse);\n\nconst handleResponse = response => {\n    if (response.ok) {\n        return response.json();\n    }\n\n    console.log(`Response not ok: ${response.status}`);\n    throw '';\n};\n\nexport {doGet, doPost, doPut}","// Uncomment this line for localhost testing\n// const API_GATEWAY_URL = 'http://localhost:7000';\n\n// Uncomment this line for heroku deployment\nconst API_GATEWAY_URL = 'https://api-gateway-ws.herokuapp.com';\n\nconst URLS = {\n    CUSTOMERS_WS: `${API_GATEWAY_URL}/customers-ws`,\n    PRODUCTS_WS: `${API_GATEWAY_URL}/products-ws`,\n    ORDERS_WS: `${API_GATEWAY_URL}/orders-ws`,\n    CARTS_WS: `${API_GATEWAY_URL}/carts-ws`,\n};\n\nexport {URLS, API_GATEWAY_URL};","import {doGet} from \"../../common/helperDAO\";\nimport {URLS} from \"../../common/urls\";\n\nconst fetchUsers = () => doGet(`${URLS.CUSTOMERS_WS}/customers/`)\n    .catch(e => {\n        console.log(`Error when retrieving users: ${e}`);\n        throw '';\n    });\n\nconst getUser = id => doGet(`${URLS.CUSTOMERS_WS}/customers/${id}`)\n    .catch(e => {\n        console.log(`Error when retrieving user ${id}: ${e}`);\n        throw '';\n    });\n\nexport {fetchUsers, getUser};","import React from 'react';\nimport {fetchUsers} from \"./usersDAO\";\nimport {Link} from \"react-router-dom\";\n\nclass Users extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadUsers();\n    }\n\n    state = {\n        users: []\n    };\n\n    loadUsers = () => fetchUsers()\n        .then(users => this.setState({users}));\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <h1>Users</h1>\n                        {this.state.users && this.state.users.length > 0 &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">User id</th>\n                                <th scope=\"col\">Email address</th>\n                                <th scope=\"col\">Full name</th>\n                                <th scope=\"col\">Registration date</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.users.map((user, key) => <UserRow user={user} key={key}/>)}\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst UserRow = ({user}) =>\n    <tr className=\"text-center\">\n        <th scope=\"row\">{user.id}</th>\n        <td><Link to={`/users/${user.id}`}>{user.email}</Link></td>\n        <td>{user.fullName}</td>\n        <td>{user.date}</td>\n    </tr>;\n\nexport {Users};","import {doGet, doPost} from \"../../common/helperDAO\";\nimport {URLS} from \"../../common/urls\";\n\nconst getCartUrl = customerId => `${URLS.CARTS_WS}/customers/${customerId}/cart`;\n\nconst getCart = customerId => doGet(getCartUrl(customerId))\n    .catch(e => {\n        console.log(`Error when retrieving cart for user ${customerId}: ${e}`);\n        throw '';\n    });\n\nconst updateCartItem = (customerId, orderItem) => doPost(`${getCartUrl(customerId)}/item`, orderItem)\n    .catch(e => {\n        console.log(`Error when updating cart for user ${customerId}: ${e}`);\n        throw '';\n    });\n\nconst incrementCartItem = (customerId, product) => doPost(`${getCartUrl(customerId)}/item/increment`, product)\n    .catch(e => {\n        console.log(`Error when updating cart for user ${customerId}: ${e}`);\n        throw '';\n    });\n\nexport {getCart, updateCartItem, incrementCartItem};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nconst OrderItem = ({orderItem, onChange, disabled, readOnly}) => {\n    const totalItemPrice = (orderItem.productDto.price * orderItem.quantity).toFixed(2);\n\n    return (\n        <tr className=\"text-center cart-item\">\n            <td><Link to={`/products/${orderItem.productDto.id}`}><img src={orderItem.productDto.imageUrl}/></Link></td>\n            <td className=\"align-middle\">{orderItem.productDto.name}</td>\n            <td className=\"align-middle text-right\">{orderItem.productDto.price} €</td>\n            <td className=\"align-middle\">\n                {readOnly ? orderItem.quantity :\n                    <QuantityDropdown quantity={orderItem.quantity}\n                                      onChange={onChange}\n                                      disabled={disabled}/>\n                }\n            </td>\n            <td className=\"align-middle text-right\">{totalItemPrice} €</td>\n        </tr>\n    );\n};\n\nconst QuantityDropdown = ({quantity, onChange, disabled}) =>\n    <select onChange={onChange} disabled={disabled} value={quantity}>\n        {[...Array(11).keys()]\n            .map(x => <option value={x} key={x}>{x}</option>)}\n    </select>;\n\nexport {OrderItem};","\nconst sortOrderItems = orderItems =>\n    orderItems && orderItems.sort((oi1, oi2) => oi1.productDto.id.localeCompare(oi2.productDto.id));\n\nexport {sortOrderItems}","import {URLS} from \"../../common/urls\";\nimport {doGet, doPost} from \"../../common/helperDAO\";\n\nconst fetchOrders = () => doGet(`${URLS.ORDERS_WS}/orders/`)\n    .catch(e => {\n        console.log(`Error when retrieving orders: ${e}`);\n        throw '';\n    });\n\nconst getOrder = id => doGet(`${URLS.ORDERS_WS}/orders/${id}`)\n    .catch(e => {\n        console.log(`Error when retrieving order ${id}: ${e}`);\n        throw '';\n    });\n\nconst fetchCustomerOrders = customerId => doGet(`${URLS.ORDERS_WS}/customers/${customerId}/orders/`)\n    .catch(e => {\n        console.log(`Error when retrieving orders for customer ${customerId}: ${e}`);\n        throw '';\n    });\n\nconst createOrder = (order, customerId) => doPost(`${URLS.ORDERS_WS}/customers/${customerId}/orders/`, order)\n    .catch(e => {\n        console.log(`Error when updating cart for user ${customerId}: ${e}`);\n        throw '';\n    });\n\n\nexport {fetchOrders, fetchCustomerOrders, getOrder, createOrder};","import React from 'react';\n\nconst Alert = ({text, hideAlert, type}) =>\n    <div className={`alert alert-${type} alert-dismissible`} role=\"alert\">\n        <div>{text}</div>\n        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick={hideAlert}>\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>;\n\nconst SuccessAlert = ({text, hideAlert}) => <Alert text={text} hideAlert={hideAlert} type='success'/>;\n\nconst ErrorAlert = ({text, hideAlert}) => <Alert text={text} hideAlert={hideAlert} type='danger'/>;\n\nconst resetAlert = () => ({\n    show: false,\n    count: 0\n});\n\nconst incrementAlert = alert => ({\n    show: true,\n    count: alert.count + 1\n});\n\nconst showSuccessAlert = alerts => showAlert(alerts, 'success');\n\nconst showErrorAlert = alerts => showAlert(alerts, 'error');\n\nconst showAlert = (alerts, type) => updateAlert(alerts, type, incrementAlert);\n\nconst hideSuccessAlert = alerts => hideAlert(alerts, 'success');\n\nconst hideErrorAlert = alerts => hideAlert(alerts, 'error');\n\nconst hideAlert = (alerts, type) => updateAlert(alerts, type, resetAlert);\n\nconst updateAlert = (alerts, type, func) => {\n    const updatedAlerts = {...alerts};\n\n    updatedAlerts[type] = func(alerts[type]);\n\n    return updatedAlerts;\n};\n\nexport {SuccessAlert, ErrorAlert, resetAlert, showSuccessAlert, showErrorAlert, hideSuccessAlert, hideErrorAlert};","import React from 'react';\nimport {getCart, updateCartItem} from \"./cartDAO\";\nimport {OrderItem} from \"../../common/OrderItem\";\nimport {sortOrderItems} from \"../../common/sorting\";\nimport {createOrder} from \"../orders/ordersDAO\";\nimport {\n    ErrorAlert,\n    hideErrorAlert,\n    hideSuccessAlert,\n    resetAlert,\n    showErrorAlert,\n    showSuccessAlert,\n    SuccessAlert\n} from \"../../common/Alert\";\nimport {connect} from \"react-redux\";\n\nclass CartComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadCart();\n    }\n\n    state = {\n        cart: undefined,\n        loading: false,\n        alerts: {\n            createOrder: {\n                success: resetAlert(),\n                error: resetAlert()\n            },\n            updateItem: {\n                success: resetAlert(),\n                error: resetAlert()\n            }\n        },\n        order: {}\n    };\n\n    onChange = item => event => {\n        this.setState({loading: true});\n\n        const cartItem = {\n            productDto: item,\n            quantity: event.target.value\n        };\n\n        updateCartItem(this.props.sessionCustomer.id, cartItem)\n            .then(cart => {\n                this.saveCartState(cart);\n                this.updateUpdateItemAlert(showSuccessAlert);\n            })\n            .catch(() => this.updateUpdateItemAlert(showErrorAlert))\n            .finally(() => this.setState({loading: false}));\n    };\n\n    calculateTotalPrice = items => items\n        .reduce((acc, item) => acc + item.quantity * item.productDto.price, 0);\n\n    loadCart = () => getCart(this.props.sessionCustomer.id)\n        .then(this.saveCartState);\n\n    saveCartState = cart => {\n        cart.orderItemDtos = sortOrderItems(cart.orderItemDtos);\n        this.setState({cart});\n    };\n\n    createOrder = () => {\n        this.setState({loading: true});\n\n        createOrder(this.state.cart, this.props.sessionCustomer.id)\n            .then(order => {\n                this.setState({cart: {}, order});\n                this.updateCreateOrderAlert(showSuccessAlert);\n            })\n            .catch(() => this.updateCreateOrderAlert(showErrorAlert))\n            .finally(() => this.setState({loading: false}));\n    };\n\n    isCartEmpty = () => !(this.state.cart && this.state.cart.orderItemDtos);\n\n    updateCreateOrderAlert = alertFunction => this.updateAlert('createOrder', alertFunction);\n\n    updateUpdateItemAlert = alertFunction => this.updateAlert('updateItem', alertFunction);\n\n    updateAlert = (alertType, alertFunction) => {\n        const alerts = {...this.state.alerts};\n\n        alerts[alertType] = alertFunction(this.state.alerts[alertType]);\n\n        this.setState({alerts: alerts});\n    };\n\n    render() {\n        const {alerts, order} = this.state;\n\n        return (\n            <React.Fragment>\n                {alerts.createOrder.success.show &&\n                <SuccessAlert text={`(${alerts.createOrder.success.count}) The order ${order.id} has been created successfully!`}\n                              hideAlert={() => this.updateCreateOrderAlert(hideSuccessAlert)}/>\n                }\n                {alerts.createOrder.error.show &&\n                <ErrorAlert text={`(${alerts.createOrder.error.count}) The order has not been created due to an error.`}\n                            hideAlert={() => this.updateCreateOrderAlert(hideErrorAlert)}/>\n                }\n                {alerts.updateItem.success.show &&\n                <SuccessAlert text={`(${alerts.updateItem.success.count}) The cart has been updated successfully!`}\n                              hideAlert={() => this.updateUpdateItemAlert(hideSuccessAlert)}/>\n                }\n                {alerts.updateItem.error.show &&\n                <ErrorAlert text={`(${alerts.updateItem.error.count}) The cart has not been updated due to an error.`}\n                            hideAlert={() => this.updateUpdateItemAlert(hideErrorAlert)}/>\n                }\n                <div className=\"container content-padding\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-12\">\n                            <div className=\"d-flex\">\n                                <div className=\"p-2\">\n                                    <h1>Cart</h1>\n                                </div>\n                                <div className=\"ml-auto p-2\">\n                                    <button type=\"button\"\n                                            className=\"btn btn-primary\"\n                                            onClick={this.createOrder}\n                                            disabled={this.isCartEmpty() || this.state.loading}>\n                                        Create order\n                                    </button>\n                                </div>\n                            </div>\n                            {!this.isCartEmpty() &&\n                            <table className=\"table\">\n                                <thead className=\"thead-light text-center\">\n                                <tr>\n                                    <th scope=\"col\">Product</th>\n                                    <th scope=\"col\">Name</th>\n                                    <th scope=\"col\">Price</th>\n                                    <th scope=\"col\">Quantity</th>\n                                    <th scope=\"col\">Total price</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {this.state.cart.orderItemDtos.map((cartItem, key) =>\n                                    <OrderItem orderItem={cartItem}\n                                               key={key}\n                                               onChange={this.onChange(cartItem.productDto)}\n                                               disabled={this.state.loading}\n                                               readOnly={false}/>\n                                )}\n                                <tr>\n                                    <td colSpan=\"5\" className=\"text-right\">\n                                        {this.calculateTotalPrice(this.state.cart.orderItemDtos).toFixed(2)} €\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    ...state.sessionReducer\n});\n\nconst Cart = connect(mapStateToProps)(CartComponent);\n\nexport {Cart};","import React from 'react';\nimport {getUser} from \"./usersDAO\";\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadUser();\n    }\n\n    state = {\n        user: undefined\n    };\n\n    loadUser = () => getUser(this.props.match.params.id)\n        .then(user => this.setState({user}));\n\n    render() {\n        const {user} = this.state;\n\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <h1>User {this.props.match.params.id}</h1>\n                        {user &&\n                        <div className=\"col-12\">\n                            <FieldView label=\"User id\" value={user.id}/>\n                            <FieldView label=\"Email address\" value={user.email}/>\n                            <FieldView label=\"Full name\" value={user.fullName}/>\n                            <FieldView label=\"Address\" value={user.address}/>\n                            <FieldView label=\"Country\" value={user.country}/>\n                            <FieldView label=\"Registration date\" value={user.date}/>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst FieldView = ({label, value}) =>\n    <div className=\"form-group row\">\n        <label className=\"col-sm-3 col-form-label\">{label}</label>\n        <label className=\"col-sm-9 col-form-label\">{value}</label>\n    </div>;\n\nexport {User};","import {URLS} from \"../../common/urls\";\nimport {doGet} from \"../../common/helperDAO\";\n\nconst fetchProducts = () => doGet(`${URLS.PRODUCTS_WS}/products/`)\n    .catch(e => {\n        console.log(`Error when retrieving productss: ${e}`);\n        throw '';\n    });\n\nconst getProduct = id => doGet(`${URLS.PRODUCTS_WS}/products/${id}`)\n    .catch(e => {\n        console.log(`Error when retrieving product ${id}: ${e}`);\n        throw '';\n    });\n\nexport {fetchProducts, getProduct};","import React from 'react';\nimport {getProduct} from \"./productsDAO\";\nimport {incrementCartItem} from \"../cart/cartDAO\";\nimport {\n    ErrorAlert,\n    hideErrorAlert,\n    hideSuccessAlert,\n    resetAlert,\n    showErrorAlert,\n    showSuccessAlert,\n    SuccessAlert\n} from \"../../common/Alert\";\nimport {connect} from \"react-redux\";\nimport {isLoggedIn} from \"../../common/customerSession\";\n\nclass ProductComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadProduct();\n    }\n\n    state = {\n        product: undefined,\n        loading: false,\n        alerts: {\n            success: resetAlert(),\n            error: resetAlert()\n        }\n    };\n\n    loadProduct = () => getProduct(this.props.match.params.id)\n        .then(product => this.setState({product}));\n\n    addProduct = () => {\n        this.setState({loading: true});\n\n        incrementCartItem(this.props.sessionCustomer.id, this.state.product)\n            .then(this.showSuccessAlert)\n            .catch(this.showErrorAlert)\n            .finally(() => this.setState({loading: false}));\n    };\n\n    showSuccessAlert = () => this.setState({alerts: showSuccessAlert(this.state.alerts)});\n\n    showErrorAlert = () => this.setState({alerts: showErrorAlert(this.state.alerts)});\n\n    hideSuccessAlert = () => this.setState({alerts: hideSuccessAlert(this.state.alerts)});\n\n    hideErrorAlert = () => this.setState({alerts: hideErrorAlert(this.state.alerts)});\n\n    isLoggedIn = () => isLoggedIn(this.props.sessionCustomer);\n\n    render() {\n        const {product, alerts} = this.state;\n\n        return (\n            <React.Fragment>\n                {alerts.success.show &&\n                <SuccessAlert text={`(${alerts.success.count}) The product has been added successfully!`}\n                              hideAlert={this.hideSuccessAlert}/>\n                }\n                {alerts.error.show &&\n                <ErrorAlert text={`(${alerts.error.count}) The product has not been added due to an error.`}\n                            hideAlert={this.hideErrorAlert}/>\n                }\n                <div className=\"container content-padding\">\n                    {product &&\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4 text-center\">\n                            <img src={product.imageUrl} alt=\"\"/>\n                        </div>\n                        <div className=\"col-4 d-flex align-items-start flex-column\">\n                            <div className=\"mb-auto p-2\">\n                                <h1 className=\"product-info-padding\">{product.name}</h1>\n                                <h5 className=\"product-info-padding\">{product.price} €</h5>\n                                <div>{product.description}</div>\n                            </div>\n                            <div className=\"p-2\">\n                                <button type=\"button\"\n                                        className=\"btn btn-primary\"\n                                        disabled={this.state.loading || !this.isLoggedIn()}\n                                        onClick={this.addProduct}>\n                                    Add to cart\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    }\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    ...state.sessionReducer\n});\n\nconst Product = connect(mapStateToProps)(ProductComponent);\n\nexport {Product};","import React from \"react\";\n\n\nconst TextInput = ({fieldName, label, onChange, disabled}) =>\n    <FieldInput fieldName={fieldName} label={label} onChange={onChange} disabled={disabled} type=\"text\"/>;\n\nconst PasswordInput = ({fieldName, label, onChange, disabled}) =>\n    <FieldInput fieldName={fieldName} label={label} onChange={onChange} disabled={disabled} type=\"password\"/>;\n\nconst FieldInput = ({fieldName, label, type, placeholder, onChange, disabled}) =>\n    <div className=\"form-group row\">\n        <label htmlFor={fieldName} className=\"col-sm-3 col-form-label\">{label}</label>\n        <div className=\"col-sm-9\">\n            <input type={type}\n                   className=\"form-control\"\n                   id={fieldName}\n                   onChange={onChange}\n                   disabled={disabled}\n                   placeholder={placeholder}/>\n        </div>\n    </div>;\n\nexport {TextInput, PasswordInput};","import {doPost} from \"../../common/helperDAO\";\nimport {URLS} from \"../../common/urls\";\n\nconst login = customer => doPost(`${URLS.CUSTOMERS_WS}/login/`, customer)\n    .catch(e => {\n        console.log(`Error when loging in user ${customer.email}: ${e}`);\n        throw '';\n    });\n\nconst signup = customer => doPost(`${URLS.CUSTOMERS_WS}/signup/`, customer)\n    .catch(e => {\n        console.log(`Error when registering user ${customer.email}: ${e}`);\n        throw '';\n    });\n\nexport {login, signup};","const SAVE_SESSION_CUSTOMER = 'SAVE_SESSION_CUSTOMER';\nconst REMOVE_SESSION_CUSTOMER = 'REMOVE_SESSION_CUSTOMER';\n\nconst saveSession = sessionCustomer => ({\n    type: SAVE_SESSION_CUSTOMER,\n    sessionCustomer\n});\n\nconst removeSession = () => ({\n    type: REMOVE_SESSION_CUSTOMER\n});\n\nexport {saveSession, removeSession, SAVE_SESSION_CUSTOMER, REMOVE_SESSION_CUSTOMER};","const validateEmail = email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n};\n\nexport{validateEmail};","import React from 'react';\nimport {PasswordInput, TextInput} from \"../../common/InputFields\";\nimport {\n    ErrorAlert,\n    hideErrorAlert,\n    hideSuccessAlert,\n    resetAlert,\n    showErrorAlert,\n    showSuccessAlert,\n    SuccessAlert\n} from \"../../common/Alert\";\nimport {signup} from \"./sessionDAO\";\nimport {isLoggedIn} from \"../../common/customerSession\";\nimport {saveSession} from \"./sessionActions\";\nimport {connect} from \"react-redux\";\nimport {validateEmail} from \"../../common/emailValidation\";\n\nclass SignupComponent extends React.Component {\n\n    state = {\n        customer: {\n            email: '',\n            password: '',\n            repeatPassword: '',\n            fullName: '',\n            address: '',\n            country: ''\n        },\n        alerts: {\n            success: resetAlert(),\n            error: resetAlert()\n        }\n    };\n\n    signup = () => signup(this.state.customer)\n        .then(customer => {\n            this.props.saveSession(customer);\n            this.showSuccessAlert();\n        })\n        .catch(this.showErrorAlert);\n\n    onChange = event => this.setState({\n        customer: {\n            ...this.state.customer,\n            [event.target.id]: event.target.value\n        }\n    });\n\n    validateForm = () => !!this.state.customer.email &&\n        !!this.state.customer.password &&\n        this.state.customer.password === this.state.customer.repeatPassword &&\n        !!this.state.customer.fullName &&\n        !!this.state.customer.address &&\n        !!this.state.customer.country &&\n        validateEmail(this.state.customer.email) &&\n        !this.isLoggedIn();\n\n    showSuccessAlert = () => this.setState({alerts: showSuccessAlert(this.state.alerts)});\n\n    showErrorAlert = () => this.setState({alerts: showErrorAlert(this.state.alerts)});\n\n    hideSuccessAlert = () => this.setState({alerts: hideSuccessAlert(this.state.alerts)});\n\n    hideErrorAlert = () => this.setState({alerts: hideErrorAlert(this.state.alerts)});\n\n    isLoggedIn = () => isLoggedIn(this.props.sessionCustomer);\n\n    render() {\n        const {alerts} = this.state;\n\n        return (\n            <React.Fragment>\n                {!alerts.success.show && this.isLoggedIn() &&\n                <SuccessAlert text={`You have already been logged in successfully!`}\n                              hideAlert={this.hideSuccessAlert}/>\n                }\n                {alerts.success.show &&\n                <SuccessAlert text={`(${alerts.success.count}) The customer has been registered successfully!`}\n                              hideAlert={this.hideSuccessAlert}/>\n                }\n                {alerts.error.show &&\n                <ErrorAlert text={`(${alerts.error.count}) The customer has not been registered due to an error.`}\n                            hideAlert={this.hideErrorAlert}/>\n                }\n                <div className=\"container content-padding\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-8\">\n                            <form>\n                                <TextInput fieldName=\"email\"\n                                           label=\"Email address\"\n                                           disabled={this.isLoggedIn()}\n                                           onChange={this.onChange}/>\n                                <PasswordInput fieldName=\"password\"\n                                               label=\"Password\"\n                                               disabled={this.isLoggedIn()}\n                                               onChange={this.onChange}/>\n                                <PasswordInput fieldName=\"repeatPassword\"\n                                               label=\"Repeat password\"\n                                               disabled={this.isLoggedIn()}\n                                               onChange={this.onChange}/>\n                                <TextInput fieldName=\"fullName\"\n                                           label=\"Full name\"\n                                           disabled={this.isLoggedIn()}\n                                           onChange={this.onChange}/>\n                                <TextInput fieldName=\"address\"\n                                           label=\"Address\"\n                                           disabled={this.isLoggedIn()}\n                                           onChange={this.onChange}/>\n                                <TextInput fieldName=\"country\"\n                                           label=\"Country\"\n                                           disabled={this.isLoggedIn()}\n                                           onChange={this.onChange}/>\n                                <div className=\"form-group row\">\n                                    <div className=\"col-sm-10\">\n                                        <button type=\"button\"\n                                                onClick={this.signup}\n                                                disabled={!this.validateForm()}\n                                                className=\"btn btn-primary\">\n                                            Sign up\n                                        </button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    ...state.sessionReducer\n});\n\nconst mapDispatchToProps = {saveSession};\n\nconst Signup = connect(mapStateToProps, mapDispatchToProps)(SignupComponent);\n\nexport {Signup};","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from \"react-router-dom\";\nimport {login} from \"./sessionDAO\";\nimport {\n    ErrorAlert,\n    hideErrorAlert,\n    hideSuccessAlert,\n    resetAlert,\n    showErrorAlert,\n    showSuccessAlert,\n    SuccessAlert\n} from \"../../common/Alert\";\nimport {isLoggedIn} from \"../../common/customerSession\";\nimport {saveSession} from \"./sessionActions\";\nimport {validateEmail} from \"../../common/emailValidation\";\n\nclass LoginComponent extends React.Component {\n\n    state = {\n        customer: {\n            email: '',\n            password: ''\n        },\n        alerts: {\n            success: resetAlert(),\n            error: resetAlert()\n        }\n    };\n\n    login = () => login(this.state.customer)\n        .then(customer => {\n            this.props.saveSession(customer);\n            this.showSuccessAlert();\n        })\n        .catch(this.showErrorAlert);\n\n    onChange = event => this.setState({\n        customer: {\n            ...this.state.customer,\n            [event.target.id]: event.target.value\n        }\n    });\n\n    validateForm = () => !!this.state.customer &&\n        !!this.state.customer.email &&\n        !!this.state.customer.password &&\n        validateEmail(this.state.customer.email) &&\n        !this.isLoggedIn();\n\n    showSuccessAlert = () => this.setState({alerts: showSuccessAlert(this.state.alerts)});\n\n    showErrorAlert = () => this.setState({alerts: showErrorAlert(this.state.alerts)});\n\n    hideSuccessAlert = () => this.setState({alerts: hideSuccessAlert(this.state.alerts)});\n\n    hideErrorAlert = () => this.setState({alerts: hideErrorAlert(this.state.alerts)});\n\n    isLoggedIn = () => isLoggedIn(this.props.sessionCustomer);\n\n    render() {\n        const {alerts} = this.state;\n\n        return (\n            <React.Fragment>\n                {!alerts.success.show && this.isLoggedIn() &&\n                <SuccessAlert text={`You have already been logged in successfully!`}\n                              hideAlert={this.hideSuccessAlert}/>\n                }\n                {alerts.success.show &&\n                <SuccessAlert text={`(${alerts.success.count}) You have been logged in successfully!`}\n                              hideAlert={this.hideSuccessAlert}/>\n                }\n                {alerts.error.show &&\n                <ErrorAlert text={`(${alerts.error.count}) You have not been logged in due to an error.`}\n                            hideAlert={this.hideErrorAlert}/>\n                }\n                <div className=\"container content-padding\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4\">\n                            <form>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">Email address</label>\n                                    <input type=\"email\"\n                                           className=\"form-control\"\n                                           id=\"email\"\n                                           aria-describedby=\"emailHelp\"\n                                           disabled={this.isLoggedIn()}\n                                           onChange={this.onChange}\n                                           placeholder=\"Enter email\"/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">Password</label>\n                                    <input type=\"password\"\n                                           className=\"form-control\"\n                                           id=\"password\"\n                                           disabled={this.isLoggedIn()}\n                                           onChange={this.onChange}\n                                           placeholder=\"Password\"/>\n                                </div>\n                                <button type=\"button\"\n                                        disabled={!this.validateForm()}\n                                        onClick={this.login}\n                                        className=\"btn btn-primary btn-block\">\n                                    Log in\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center login-separator\">\n                        <div className=\"col-1\">\n                            <hr/>\n                        </div>\n                        <div className=\"col-auto\">or</div>\n                        <div className=\"col-1\">\n                            <hr/>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4\">\n                            <Link to=\"/signup\">\n                                <button type=\"button\"\n                                        className=\"btn btn-primary btn-block\"\n                                        disabled={this.isLoggedIn()}>\n                                    Sign up\n                                </button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    ...state.sessionReducer\n});\n\nconst mapDispatchToProps = {saveSession};\n\nconst Login = connect(mapStateToProps, mapDispatchToProps)(LoginComponent);\n\nexport {Login};","import React from 'react';\nimport {OrderItem} from \"../../common/OrderItem\";\nimport {getOrder} from \"./ordersDAO\";\nimport {sortOrderItems} from \"../../common/sorting\";\nimport {Link} from \"react-router-dom\";\n\nclass Order extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadOrder();\n    }\n\n    state = {\n        order: undefined\n    };\n\n    loadOrder = () => getOrder(this.props.match.params.id)\n        .then(order => {\n            order.orderItemDtos = sortOrderItems(order.orderItemDtos);\n            this.setState({order});\n        });\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <h1>Order {this.props.match.params.id}</h1>\n                        {this.state.order && this.state.order.orderItemDtos &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Product</th>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Price</th>\n                                <th scope=\"col\">Quantity</th>\n                                <th scope=\"col\">Total price</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.order.orderItemDtos.map((orderItem, key) =>\n                                <OrderItem orderItem={orderItem}\n                                           key={key}\n                                           readOnly={true}/>\n                            )}\n                            <tr>\n                                <td colSpan=\"5\" className=\"text-right\">\n                                    {this.state.order.amount} €\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        }\n                        <h4>Status</h4>\n                        {this.state.orderEvents &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Status</th>\n                                <th scope=\"col\">Date</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.orderEvents.map((orderEvent, key) =>\n                                <tr className=\"text-center cart-item\" key={`events_${key}`}>\n                                    <td>{orderEvent.status}</td>\n                                    <td>{orderEvent.eventDate}</td>\n                                </tr>\n                            )}\n                            <tr>\n                                <td colSpan=\"5\" className=\"text-right\">\n                                    {this.state.order.amount} €\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Order};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst LinkToProduct = ({children, id}) => <Link to={`/products/${id}`}>{children}</Link>;\n\nconst GridItem = ({product, addProduct, disabled}) =>\n    <div className=\"col-6 col-md-2 text-center\">\n        <div className=\"grid-item\">\n            <div><LinkToProduct id={product.id}><img src={product.imageUrl} alt=\"\"/></LinkToProduct></div>\n            <LinkToProduct id={product.id}>{product.name}</LinkToProduct>\n            <div>{product.price} €</div>\n            <button type=\"button\"\n                    className=\"btn btn-primary\"\n                    disabled={disabled}\n                    onClick={() => addProduct(product)}\n            >Add to cart\n            </button>\n        </div>\n    </div>;\n\nexport {GridItem};","import React from 'react';\nimport {GridItem} from \"./GridItem\";\n\nconst GridRow = ({productsRow, addProduct, disabled}) =>\n    <div className=\"row grid-row\">\n        {productsRow.map((product, key) => <GridItem product={product}\n                                                     addProduct={addProduct}\n                                                     disabled={disabled}\n                                                     key={key}/>)\n        }\n    </div>;\n\nexport {GridRow};","import React from 'react';\nimport {GridRow} from \"./grid/GridRow\";\nimport {fetchProducts} from \"./productsDAO\";\nimport {incrementCartItem} from \"../cart/cartDAO\";\nimport {\n    ErrorAlert,\n    hideErrorAlert,\n    hideSuccessAlert,\n    resetAlert,\n    showErrorAlert,\n    showSuccessAlert,\n    SuccessAlert\n} from \"../../common/Alert\";\nimport {connect} from \"react-redux\";\nimport {isLoggedIn} from \"../../common/customerSession\";\n\nconst toMatrix = (array, numCols) => {\n    if (!array)\n        return;\n\n    const addElementToCell = (array, x, i) => {\n        const rowNumber = Math.floor(i / numCols);\n\n        if (i % numCols === 0) {\n            array[rowNumber] = [];\n        }\n\n        array[rowNumber].push(x);\n    };\n\n    const matrix = [];\n\n    array.map((x, i) => addElementToCell(matrix, x, i));\n\n    return matrix;\n\n};\n\nclass ProductsComponent extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadProducts();\n    }\n\n    state = {\n        products: [],\n        loading: false,\n        alerts: {\n            success: resetAlert(),\n            error: resetAlert()\n        },\n    };\n\n    loadProducts = () => fetchProducts()\n        .then(products => this.setState({products}));\n\n\n    addProduct = product => {\n        this.setState({loading: true});\n\n        incrementCartItem(this.props.sessionCustomer.id, product)\n            .then(this.showSuccessAlert)\n            .catch(this.showErrorAlert)\n            .finally(() => this.setState({loading: false}));\n    };\n\n    showSuccessAlert = () => this.setState({alerts: showSuccessAlert(this.state.alerts)});\n\n    showErrorAlert = () => this.setState({alerts: showErrorAlert(this.state.alerts)});\n\n    hideSuccessAlert = () => this.setState({alerts: hideSuccessAlert(this.state.alerts)});\n\n    hideErrorAlert = () => this.setState({alerts: hideErrorAlert(this.state.alerts)});\n\n    isLoggedIn = () => isLoggedIn(this.props.sessionCustomer);\n\n    render() {\n        const grid = toMatrix(this.state.products, 6);\n        const {alerts} = this.state;\n\n        return (\n            this.state.products &&\n            <React.Fragment>\n                {alerts.success.show &&\n                <SuccessAlert text={`(${alerts.success.count}) The product has been added successfully!`}\n                              hideAlert={this.hideSuccessAlert}/>\n                }\n                {alerts.error.show &&\n                <ErrorAlert text={`(${alerts.error.count}) The product has not been added due to an error.`}\n                            hideAlert={this.hideErrorAlert}/>\n                }\n                <div className=\"container-fluid content-padding\">\n                    {\n                        grid.map((gridRow, key) =>\n                            <GridRow productsRow={gridRow}\n                                     addProduct={this.addProduct}\n                                     disabled={this.state.loading || !this.isLoggedIn()}\n                                     key={key}/>)\n                    }\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    ...state.sessionReducer\n});\n\nconst Products = connect(mapStateToProps)(ProductsComponent);\n\nexport {Products};","import {doGet} from \"./helperDAO\";\nimport {API_GATEWAY_URL} from \"./urls\";\n\nconst fetchSystemHealth = () => doGet(`${API_GATEWAY_URL}/system/health`)\n    .catch(e => console.log(`Error when retrieving system health: ${e}`));\n\nexport {fetchSystemHealth};","import React from \"react\";\n\nconst Loading = () => <h1>System is currently loading. Wait for a couple of minutes and try again. Thanks!</h1>;\n\nexport {Loading};","import {Products} from \"./routes/products/Products\";\nimport React from \"react\";\nimport {fetchSystemHealth} from \"./common/SystemHealthDAO\";\nimport {Loading} from \"./Loading\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadSystemStatus();\n        setTimeout(() => this.setState({initialTimeoutPassed: true}), 2000);\n    }\n\n    state = {\n        systemStatus: undefined,\n        initialTimeoutPassed: false\n    };\n\n    loadSystemStatus = () => fetchSystemHealth()\n        .then(systemStatus => this.setState({systemStatus}));\n\n    isSystemUp = () => this.state.systemStatus &&\n        this.state.systemStatus.services\n            .map(service => service.status)\n            .reduce((acc, status) => status === 'UP' && acc, true);\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.isSystemUp() && <Products/>}\n                {!this.isSystemUp() && this.state.initialTimeoutPassed && <Loading/>}\n            </React.Fragment>\n        );\n    }\n}\n\nexport {App}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Orders extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadOrders();\n    }\n\n    state = {\n        orders: []\n    };\n\n    loadOrders = () => this.props.fetchOrders()\n        .then(orders => this.setState({orders}));\n\n    render() {\n        const {orders} = this.state;\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-12\">\n                        <h1>{this.props.title}</h1>\n                        {orders && orders.length > 0 &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Order id</th>\n                                <th scope=\"col\">User id</th>\n                                <th scope=\"col\">Total price</th>\n                                <th scope=\"col\">Checkout date</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {orders.map((order, key) => <OrderRow order={order} key={key}/>)}\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst OrderRow = ({order}) =>\n    <tr className=\"text-center\">\n        <td><Link to={`/orders/${order.id}`}>{order.id}</Link></td>\n        <td><Link to={`/users/${order.customerId}`}>{order.customerId}</Link></td>\n        <td className=\"text-right\">{order.amount} €</td>\n        <td>{order.date}</td>\n    </tr>;\n\nexport {Orders};","import React from 'react';\nimport {Orders} from \"./Orders\";\nimport {fetchCustomerOrders} from \"./ordersDAO\";\nimport {connect} from \"react-redux\";\n\nconst MyOrdersComponent = ({sessionCustomer}) => <Orders fetchOrders={() => fetchCustomerOrders(sessionCustomer.id)}\n                               title='My orders'/>;\n\n\nconst mapStateToProps = state => ({\n    ...state.sessionReducer\n});\n\nconst MyOrders = connect(mapStateToProps)(MyOrdersComponent);\n\nexport {MyOrders}","import {REMOVE_SESSION_CUSTOMER, SAVE_SESSION_CUSTOMER} from \"./sessionActions\";\nimport {loadCustomerSession, removeCustomerSession, saveCustomerSession} from \"../../common/customerSession\";\n\nconst initialState = {\n    sessionCustomer: loadCustomerSession()\n};\n\nconst sessionReducer = (prevState = initialState, action) => {\n    switch (action.type) {\n\n        case SAVE_SESSION_CUSTOMER: {\n            saveCustomerSession(action.sessionCustomer);\n\n            return {\n                ...prevState,\n                sessionCustomer: action.sessionCustomer\n            };\n        }\n\n        case REMOVE_SESSION_CUSTOMER: {\n            removeCustomerSession();\n\n            return {\n                ...prevState,\n                sessionCustomer: {}\n            };\n        }\n        default: {\n            return prevState;\n        }\n    }\n};\n\nexport {sessionReducer};","import { combineReducers } from 'redux';\nimport {sessionReducer} from \"./routes/login/sessionReducer\";\n\nconst appReducer = combineReducers({\n    sessionReducer\n});\n\nexport {appReducer};","import {removeSession} from \"./sessionActions\";\nimport {connect} from \"react-redux\";\nimport {SuccessAlert} from \"../../common/Alert\";\nimport React from \"react\";\n\nconst LogoutComponent = ({removeSession}) => {\n    removeSession();\n\n    return (\n        <SuccessAlert text={`You have successfully logged out!`}/>\n    );\n};\n\nconst mapDispatchToProps = {removeSession};\n\nconst Logout = connect(undefined, mapDispatchToProps)(LogoutComponent);\n\nexport {Logout};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Navbar} from \"./common/Navbar\";\nimport {Users} from \"./routes/users/Users\";\nimport {Cart} from \"./routes/cart/Cart\";\nimport {User} from \"./routes/users/User\";\nimport {Product} from \"./routes/products/Product\";\nimport {Error404} from \"./routes/error/Error404\";\nimport {Signup} from \"./routes/login/Signup\";\nimport {Login} from \"./routes/login/Login\";\nimport {Order} from \"./routes/orders/Order\";\nimport {App} from \"./App\";\nimport {MyOrders} from \"./routes/orders/MyOrders\";\nimport {AllOrders} from \"./routes/orders/AllOrders\";\nimport {Provider} from 'react-redux'\nimport {configureStore} from './store';\nimport {Logout} from \"./routes/login/Logout\";\n\nconst routing = (\n    <Router>\n        <Navbar/>\n        <Switch>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/logout\" component={Logout}/>\n            <Route path=\"/signup\" component={Signup}/>\n            <Route path=\"/cart\" component={Cart}/>\n            <Route path=\"/orders/:id\" component={Order}/>\n            <Route path=\"/orders\" component={AllOrders}/>\n            <Route path=\"/myOrders\" component={MyOrders}/>\n            <Route path=\"/users/:id\" component={User}/>\n            <Route path=\"/users\" component={Users}/>\n            <Route path=\"/products/:id\" component={Product}/>\n            <Route exact path=\"/\" component={App}/>\n            <Route component={Error404}/>\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        {routing}\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {Orders} from \"./Orders\";\nimport {fetchOrders} from \"./ordersDAO\";\n\nconst AllOrders = () => <Orders fetchOrders={fetchOrders} title='All customer orders'/>\n\nexport {AllOrders}","import React from 'react'\n\nconst Error404 = () => <h1 className=\"container content-padding\">Not found</h1>;\n\nexport {Error404};","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {appReducer} from \"./appReducer\";\n\n\nconst configureStore = () => {\n    return createStore(\n        appReducer,\n        applyMiddleware(thunk)\n    );\n};\n\nexport {configureStore};"],"sourceRoot":""}