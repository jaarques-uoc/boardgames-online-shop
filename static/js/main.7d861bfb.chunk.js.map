{"version":3,"sources":["serviceWorker.js","common/helperDAO.js","common/urls.js","routes/users/usersDAO.js","routes/users/Users.js","routes/cart/cartDAO.js","common/OrderItem.js","common/sorting.js","routes/cart/Cart.js","routes/users/User.js","routes/products/productsDAO.js","routes/products/Product.js","common/InputFields.js","routes/login/Signup.js","routes/login/Login.js","routes/orders/ordersDAO.js","routes/orders/Order.js","routes/products/grid/GridItem.js","routes/products/grid/GridRow.js","routes/products/Products.js","common/SystemHealthDAO.js","Loading.js","App.js","routes/orders/Orders.js","index.js","common/Navbar.js","routes/orders/AllOrders.js","routes/orders/MyOrders.js","routes/error/Error404.js"],"names":["Boolean","window","location","hostname","match","doGet","url","fetch","method","headers","Accept","then","handleResponse","doPost","body","JSON","stringify","Content-Type","response","ok","json","console","log","concat","status","URLS","CUSTOMERS_WS","PRODUCTS_WS","ORDERS_WS","CARTS_WS","fetchUsers","catch","e","getUser","id","Users","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","users","loadUsers","setState","react_default","a","createElement","className","length","scope","map","user","key","Users_UserRow","React","Component","UserRow","_ref","react_router_dom","to","email","fullName","creationDate","getCartUrl","customerId","getCart","updateCartItem","orderItem","incrementCartItem","product","OrderItem","onChange","disabled","readOnly","totalItemPrice","productDto","price","quantity","toFixed","src","imageUrl","name","OrderItem_QuantityDropdown","QuantityDropdown","_ref2","toConsumableArray","Array","keys","x","value","selected","sortOrderItems","orderItems","sort","oi1","oi2","localeCompare","Cart","cart","undefined","loading","userId","item","event","cartItem","target","saveCartState","finally","calculateTotalPrice","items","reduce","acc","loadCart","orderItemDtos","_this2","OrderItem_OrderItem","colSpan","User","loadUser","params","User_FieldView","label","address","country","FieldView","fetchProducts","getProduct","Product","loadProduct","addProduct","description","type","onClick","TextInput","fieldName","InputFields_FieldInput","PasswordInput","FieldInput","_ref3","placeholder","htmlFor","Signup","password","repeatPassword","defineProperty","validateForm","InputFields_TextInput","InputFields_PasswordInput","Login","aria-describedby","fetchOrders","getOrder","Order","order","loadOrder","amount","LinkToProduct","children","GridItem","GridItem_LinkToProduct","GridRow","productsRow","GridItem_GridItem","toMatrix","array","numCols","matrix","i","rowNumber","Math","floor","push","addElementToCell","Products","products","loadProducts","grid","gridRow","GridRow_GridRow","fetchSystemHealth","Loading","App","systemStatus","initialTimeoutPassed","loadSystemStatus","isSystemUp","services","service","setTimeout","Fragment","Products_Products","Loading_Loading","Orders","orders","loadOrders","title","Orders_OrderRow","OrderRow","date","routing","objectDestructuringEmpty","href","react_router","path","component","Orders_Orders","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d861bfb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const doGet = url => fetch(url, {\n    method: 'GET',\n    headers: {\n        Accept: 'application/json'\n    }\n})\n    .then(handleResponse);\n\nconst doPost = (url, body) => fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(body),\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    }\n})\n    .then(handleResponse);\n\nconst doPut = (url, body) => fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(body),\n    headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n    }\n})\n    .then(handleResponse);\n\nconst handleResponse = response => {\n    if (response.ok) {\n        return response.json();\n    }\n\n    console.log(`Response not ok: ${response.status}`);\n    throw '';\n};\n\nexport {doGet, doPost, doPut}","// Uncomment this line for localhost testing\nconst API_GATEWAY_URL = 'http://localhost:7000';\n\n// Uncomment this line for heroku deployment\n// const API_GATEWAY_URL = 'https://api-gateway-ws.herokuapp.com';\n\nconst URLS = {\n    CUSTOMERS_WS: `${API_GATEWAY_URL}/customers-ws`,\n    PRODUCTS_WS: `${API_GATEWAY_URL}/products-ws`,\n    ORDERS_WS: `${API_GATEWAY_URL}/orders-ws`,\n    CARTS_WS: `${API_GATEWAY_URL}/carts-ws`,\n};\n\nexport {URLS, API_GATEWAY_URL};","import {doGet} from \"../../common/helperDAO\";\nimport {URLS} from \"../../common/urls\";\n\nconst fetchUsers = () => doGet(`${URLS.CUSTOMERS_WS}/customers/`)\n    .catch(e => {\n        console.log(`Error when retrieving users: ${e}`);\n        throw '';\n    });\n\nconst getUser = id => doGet(`${URLS.CUSTOMERS_WS}/customers/${id}`)\n    .catch(e => {\n        console.log(`Error when retrieving user ${id}: ${e}`);\n        throw '';\n    });\n\nexport {fetchUsers, getUser};","import React from 'react';\nimport {fetchUsers} from \"./usersDAO\";\nimport {Link} from \"react-router-dom\";\n\nclass Users extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadUsers();\n    }\n\n    state = {\n        users: []\n    };\n\n    loadUsers = () => fetchUsers()\n        .then(users => this.setState({users}));\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>Users</h1>\n                        {this.state.users && this.state.users.length > 0 &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">User id</th>\n                                <th scope=\"col\">Email address</th>\n                                <th scope=\"col\">Full name</th>\n                                <th scope=\"col\">Registration date</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.users.map((user, key) => <UserRow user={user} key={key}/>)}\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst UserRow = ({user}) =>\n    <tr className=\"text-center\">\n        <th scope=\"row\">{user.id}</th>\n        <td><Link to={`/users/${user.id}`}>{user.email}</Link></td>\n        <td>{user.fullName}</td>\n        <td>{user.creationDate}</td>\n    </tr>;\n\nexport {Users};","import {doGet, doPost, doPut} from \"../../common/helperDAO\";\nimport {URLS} from \"../../common/urls\";\n\nconst getCartUrl = customerId => `${URLS.CARTS_WS}/customers/${customerId}/cart`;\n\nconst getCart = customerId => doGet(getCartUrl(customerId))\n    .catch(e => {\n        console.log(`Error when retrieving cart for user ${customerId}: ${e}`);\n        throw '';\n    });\n\nconst updateCartItem = (customerId, orderItem) => doPost(`${getCartUrl(customerId)}/item`, orderItem)\n    .catch(e => {\n        console.log(`Error when updating cart for user ${customerId}: ${e}`);\n        throw '';\n    });\n\nconst incrementCartItem = (customerId, product) => doPost(`${getCartUrl(customerId)}/item/increment`, product)\n    .catch(e => {\n        console.log(`Error when updating cart for user ${customerId}: ${e}`);\n        throw '';\n    });\n\nexport {getCart, updateCartItem, incrementCartItem};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nconst OrderItem = ({orderItem, onChange, disabled, readOnly}) => {\n    const totalItemPrice = (orderItem.productDto.price * orderItem.quantity).toFixed(2);\n\n    return (\n        <tr className=\"text-center cart-item\">\n            <td><Link to={`/products/${orderItem.productDto.id}`}><img src={orderItem.productDto.imageUrl}/></Link></td>\n            <td className=\"align-middle\">{orderItem.productDto.name}</td>\n            <td className=\"align-middle text-right\">{orderItem.productDto.price} €</td>\n            <td className=\"align-middle\">\n                {readOnly ? orderItem.quantity :\n                    <QuantityDropdown quantity={orderItem.quantity}\n                                      onChange={onChange}\n                                      disabled={disabled}/>\n                }\n            </td>\n            <td className=\"align-middle text-right\">{totalItemPrice} €</td>\n        </tr>\n    );\n};\n\nconst QuantityDropdown = ({quantity, onChange, disabled}) =>\n    <select onChange={onChange} disabled={disabled}>\n        {[...Array(11).keys()]\n            .map(x => <option value={x} key={x} selected={quantity === x}>{x}</option>)}\n    </select>;\n\nexport {OrderItem};","\nconst sortOrderItems = orderItems =>\n    orderItems && orderItems.sort((oi1, oi2) => oi1.productDto.id.localeCompare(oi2.productDto.id));\n\nexport {sortOrderItems}","import React from 'react';\nimport {getCart, updateCartItem} from \"./cartDAO\";\nimport {OrderItem} from \"../../common/OrderItem\";\nimport {sortOrderItems} from \"../../common/sorting\";\n\nclass Cart extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadCart();\n    }\n\n    state = {\n        cart: undefined,\n        loading: false,\n        userId: 12345678\n    };\n\n    onChange = item => event => {\n        this.setState({loading: true});\n\n        const cartItem = {\n            productDto: item,\n            quantity: event.target.value\n        };\n\n        updateCartItem(this.state.userId, cartItem)\n            .then(this.saveCartState)\n            .finally(() => this.setState({loading: false}));\n    };\n\n    calculateTotalPrice = items => items\n        .reduce((acc, item) => acc + item.quantity * item.productDto.price, 0);\n\n    loadCart = () => getCart(this.state.userId)\n        .then(this.saveCartState);\n\n    saveCartState = cart => {\n        cart.orderItemDtos = sortOrderItems(cart.orderItemDtos);\n        this.setState({cart});\n    };\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>Cart</h1>\n                        {this.state.cart && this.state.cart.orderItemDtos &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Product</th>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Price</th>\n                                <th scope=\"col\">Quantity</th>\n                                <th scope=\"col\">Total price</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.cart.orderItemDtos.map((cartItem, key) =>\n                                <OrderItem orderItem={cartItem}\n                                           key={key}\n                                           onChange={this.onChange(cartItem.productDto)}\n                                           disabled={this.state.loading}\n                                           readOnly={false}/>\n                            )}\n                            <tr>\n                                <td colSpan=\"5\" className=\"text-right\">\n                                    {this.calculateTotalPrice(this.state.cart.orderItemDtos).toFixed(2)} €\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Cart};","import React from 'react';\nimport {getUser} from \"./usersDAO\";\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadUser();\n    }\n\n    state = {\n        user: undefined\n    };\n\n    loadUser = () => getUser(this.props.match.params.id)\n        .then(user => this.setState({user}));\n\n    render() {\n        const {user} = this.state;\n\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>User {this.props.match.params.id}</h1>\n                        {user &&\n                        <div className=\"col-12\">\n                            <FieldView label=\"User id\" value={user.id}/>\n                            <FieldView label=\"Email address\" value={user.email}/>\n                            <FieldView label=\"Full name\" value={user.fullName}/>\n                            <FieldView label=\"Address\" value={user.address}/>\n                            <FieldView label=\"Country\" value={user.country}/>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nconst FieldView = ({label, value}) =>\n    <div className=\"form-group row\">\n        <label className=\"col-sm-3 col-form-label\">{label}</label>\n        <label className=\"col-sm-9 col-form-label\">{value}</label>\n    </div>;\n\nexport {User};","import {URLS} from \"../../common/urls\";\nimport {doGet} from \"../../common/helperDAO\";\n\nconst fetchProducts = () => doGet(`${URLS.PRODUCTS_WS}/products/`)\n    .catch(e => {\n        console.log(`Error when retrieving productss: ${e}`);\n        throw '';\n    });\n\nconst getProduct = id => doGet(`${URLS.PRODUCTS_WS}/products/${id}`)\n    .catch(e => {\n        console.log(`Error when retrieving product ${id}: ${e}`);\n        throw '';\n    });\n\nexport {fetchProducts, getProduct};","import React from 'react';\nimport {getProduct} from \"./productsDAO\";\nimport {incrementCartItem} from \"../cart/cartDAO\";\n\nclass Product extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadProduct();\n    }\n\n    state = {\n        product: undefined,\n        userId: 12345678\n    };\n\n    loadProduct = () => getProduct(this.props.match.params.id)\n        .then(product => this.setState({product}));\n\n    addProduct = () => incrementCartItem(this.state.userId, this.state.product)\n        .then(() => console.log('Added!!'));\n\n    render() {\n        const {product} = this.state;\n\n        return (\n            <div className=\"container content-padding\">\n                {product &&\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 text-center\">\n                        <img src={product.imageUrl}/>\n                    </div>\n                    <div className=\"col-4 d-flex align-items-start flex-column\">\n                        <div className=\"mb-auto p-2\">\n                            <h1 className=\"product-info-padding\">{product.name}</h1>\n                            <h5 className=\"product-info-padding\">{product.price} €</h5>\n                            <div>{product.description}</div>\n                        </div>\n                        <div className=\"p-2\">\n                            <button type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={this.addProduct}>\n                                Add to cart\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport {Product};","import React from \"react\";\n\n\nconst TextInput = ({fieldName, label, onChange}) =>\n    <FieldInput fieldName={fieldName} label={label} onChange={onChange} type=\"text\"/>;\n\nconst PasswordInput = ({fieldName, label, onChange}) =>\n    <FieldInput fieldName={fieldName} label={label} onChange={onChange} type=\"password\"/>;\n\nconst FieldInput = ({fieldName, label, type, placeholder, onChange}) =>\n    <div className=\"form-group row\">\n        <label htmlFor={fieldName} className=\"col-sm-3 col-form-label\">{label}</label>\n        <div className=\"col-sm-9\">\n            <input type={type}\n                   className=\"form-control\"\n                   id={fieldName}\n                   onChange={onChange}\n                   placeholder={placeholder}/>\n        </div>\n    </div>;\n\nexport {TextInput, PasswordInput};","import React from 'react';\nimport {PasswordInput, TextInput} from \"../../common/InputFields\";\n\nclass Signup extends React.Component {\n\n    state = {\n        email: '',\n        password: '',\n        repeatPassword: '',\n        fullName: '',\n        address: '',\n        country: ''\n    };\n\n    onClick = () => {\n        return false;\n    };\n\n    onChange = event => this.setState({\n        [event.target.id]: event.target.value\n    });\n\n    validateForm = () => !!this.state.email &&\n        !!this.state.password &&\n        !!this.state.repeatPassword &&\n        this.state.password === this.state.repeatPassword &&\n        !!this.state.fullName &&\n        !!this.state.address &&\n        !!this.state.country;\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <form>\n                            <TextInput fieldName=\"email\" label=\"Email address\" onChange={this.onChange}/>\n                            <PasswordInput fieldName=\"password\" label=\"Password\" onChange={this.onChange}/>\n                            <PasswordInput fieldName=\"repeatPassword\" label=\"Repeat password\" onChange={this.onChange}/>\n                            <TextInput fieldName=\"fullName\" label=\"Full name\" onChange={this.onChange}/>\n                            <TextInput fieldName=\"address\" label=\"Address\" onChange={this.onChange}/>\n                            <TextInput fieldName=\"country\" label=\"Country\" onChange={this.onChange}/>\n                            <div className=\"form-group row\">\n                                <div className=\"col-sm-10\">\n                                    <button type=\"button\"\n                                            onClick={this.onClick}\n                                            disabled={!this.validateForm()}\n                                            className=\"btn btn-primary\">\n                                        Sign up\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Signup};","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Login extends React.Component {\n\n    state = {\n        email: '',\n        password: ''\n    };\n\n    onClick = () => {\n        return false;\n    };\n\n    onChange = event => this.setState({\n        [event.target.id]: event.target.value\n    });\n\n    validateForm = () => !!this.state.email && !!this.state.password;\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4\">\n                        <form>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email address</label>\n                                <input type=\"email\"\n                                       className=\"form-control\"\n                                       id=\"email\"\n                                       aria-describedby=\"emailHelp\"\n                                       onChange={this.onChange}\n                                       placeholder=\"Enter email\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                       className=\"form-control\"\n                                       id=\"password\"\n                                       onChange={this.onChange}\n                                       placeholder=\"Password\"/>\n                            </div>\n                            <button type=\"button\"\n                                    disabled={!this.validateForm()}\n                                    onClick={this.onClick}\n                                    className=\"btn btn-primary btn-block\">\n                                Log in\n                            </button>\n                        </form>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center login-separator\">\n                    <div className=\"col-1\">\n                        <hr/>\n                    </div>\n                    <div className=\"col-auto\">or</div>\n                    <div className=\"col-1\">\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4\">\n                        <Link to=\"/signup\">\n                            <button type=\"button\" className=\"btn btn-primary btn-block\">\n                                Sign up\n                            </button>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Login};","import {URLS} from \"../../common/urls\";\nimport {doGet} from \"../../common/helperDAO\";\n\nconst fetchOrders = () => doGet(`${URLS.ORDERS_WS}/orders/`)\n    .catch(e => {\n        console.log(`Error when retrieving orders: ${e}`);\n        throw '';\n    });\n\nconst getOrder = id => doGet(`${URLS.ORDERS_WS}/orders/${id}`)\n    .catch(e => {\n        console.log(`Error when retrieving order ${id}: ${e}`);\n        throw '';\n    });\n\nconst fetchCustomerOrders = customerId => doGet(`${URLS.ORDERS_WS}/customers/${customerId}/orders/`)\n    .catch(e => {\n        console.log(`Error when retrieving orders for customer ${customerId}: ${e}`);\n        throw '';\n    });\n\n\nexport {fetchOrders, fetchCustomerOrders, getOrder};","import React from 'react';\nimport {OrderItem} from \"../../common/OrderItem\";\nimport {getOrder} from \"./ordersDAO\";\nimport {sortOrderItems} from \"../../common/sorting\";\n\nclass Order extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.loadOrder();\n    }\n\n    state = {\n        order: undefined\n    };\n\n    loadOrder = () => getOrder(this.props.match.params.id)\n        .then(order => {\n            order.orderItemDtos = sortOrderItems(order.orderItemDtos);\n            this.setState({order})\n        });\n\n    render() {\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>Order {this.props.match.params.id}</h1>\n                        {this.state.order && this.state.order.orderItemDtos &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Product</th>\n                                <th scope=\"col\">Name</th>\n                                <th scope=\"col\">Price</th>\n                                <th scope=\"col\">Quantity</th>\n                                <th scope=\"col\">Total price</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.order.orderItemDtos.map((orderItem, key) =>\n                                <OrderItem orderItem={orderItem}\n                                           key={key}\n                                           readOnly={true}/>\n                            )}\n                            <tr>\n                                <td colSpan=\"5\" className=\"text-right\">\n                                    {this.state.order.amount} €\n                                </td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Order};","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {incrementCartItem} from \"../../cart/cartDAO\";\n\nconst LinkToProduct = ({children, id}) => <Link to={`/products/${id}`}>{children}</Link>;\n\nconst GridItem = ({product}) => {\n    const addProduct = () => incrementCartItem(12345678, product)\n        .then(() => console.log('Added!!'));\n\n    return (<div className=\"col-6 col-md-2 text-center\">\n        <div className=\"grid-item\">\n            <div><LinkToProduct id={product.id}><img src={product.imageUrl}/></LinkToProduct></div>\n            <LinkToProduct id={product.id}>{product.name}</LinkToProduct>\n            <div>{product.price} €</div>\n            <button type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={addProduct}\n            >Add to cart\n            </button>\n        </div>\n    </div>);\n};\n\nexport {GridItem};","import React from 'react';\nimport {GridItem} from \"./GridItem\";\n\nconst GridRow = ({productsRow}) =>\n    <div className=\"row grid-row\">\n        {productsRow.map((product, key) => <GridItem product={product} key={key}/>)}\n    </div>;\n\nexport {GridRow};","import React from 'react';\nimport {GridRow} from \"./grid/GridRow\";\nimport {fetchProducts} from \"./productsDAO\";\n\nconst toMatrix = (array, numCols) => {\n    if (!array)\n        return;\n\n    const addElementToCell = (array, x, i) => {\n        const rowNumber = Math.floor(i / numCols);\n\n        if (i % numCols === 0) {\n            array[rowNumber] = [];\n        }\n\n        array[rowNumber].push(x);\n    };\n\n    const matrix = [];\n\n    array.map((x, i) => addElementToCell(matrix, x, i));\n\n    return matrix;\n\n};\n\nclass Products extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadProducts();\n    }\n\n    state = {\n        products: []\n    };\n\n    loadProducts = () => fetchProducts()\n        .then(products => this.setState({products}));\n\n    render() {\n        const grid = toMatrix(this.state.products, 6);\n\n        return (\n            this.state.products &&\n            <div className=\"container-fluid content-padding\">\n                {\n                    grid.map((gridRow, key) => <GridRow productsRow={gridRow} key={key}/>)\n                }\n            </div>\n        );\n    }\n}\n\nexport {Products};","import {doGet} from \"./helperDAO\";\nimport {API_GATEWAY_URL} from \"./urls\";\n\nconst fetchSystemHealth = () => doGet(`${API_GATEWAY_URL}/system/health`)\n    .catch(e => console.log(`Error when retrieving system health: ${e}`));\n\nexport {fetchSystemHealth};","import React from \"react\";\n\nconst Loading = () => <h1>System is currently loading. Wait for a couple of minutes and try again. Thanks!</h1>;\n\nexport {Loading};","import {Products} from \"./routes/products/Products\";\nimport React from \"react\";\nimport {fetchSystemHealth} from \"./common/SystemHealthDAO\";\nimport {Loading} from \"./Loading\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadSystemStatus();\n        setTimeout(() => this.setState({initialTimeoutPassed: true}), 2000);\n    }\n\n    state = {\n        systemStatus: undefined,\n        initialTimeoutPassed: false\n    };\n\n    loadSystemStatus = () => fetchSystemHealth()\n        .then(systemStatus => this.setState({systemStatus}));\n\n    isSystemUp = () => this.state.systemStatus &&\n        this.state.systemStatus.services\n            .map(service => service.status)\n            .reduce((acc, status) => status === 'UP' && acc, true);\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.isSystemUp() && <Products/>}\n                {!this.isSystemUp() && this.state.initialTimeoutPassed && <Loading/>}\n            </React.Fragment>\n        );\n    }\n}\n\nexport {App}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Orders extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.loadOrders();\n    }\n\n    state = {\n        orders: []\n    };\n\n    loadOrders = () => this.props.fetchOrders()\n        .then(orders => this.setState({orders}));\n\n    render() {\n        const {orders} = this.state;\n        return (\n            <div className=\"container content-padding\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-8\">\n                        <h1>{this.props.title}</h1>\n                        {orders && orders.length > 0 &&\n                        <table className=\"table\">\n                            <thead className=\"thead-light text-center\">\n                            <tr>\n                                <th scope=\"col\">Order id</th>\n                                <th scope=\"col\">User id</th>\n                                <th scope=\"col\">Total price</th>\n                                <th scope=\"col\">Checkout date</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {orders.map((order, key) => <OrderRow order={order} key={key}/>)}\n                            </tbody>\n                        </table>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst OrderRow = ({order}) =>\n    <tr className=\"text-center\">\n        <td><Link to={`/orders/${order.id}`}>{order.id}</Link></td>\n        <td>{order.customerId}</td>\n        <td className=\"text-right\">{order.amount} €</td>\n        <td>{order.date}</td>\n    </tr>;\n\nexport {Orders};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {Navbar} from \"./common/Navbar\";\nimport {Users} from \"./routes/users/Users\";\nimport {Cart} from \"./routes/cart/Cart\";\nimport {User} from \"./routes/users/User\";\nimport {Product} from \"./routes/products/Product\";\nimport {Error404} from \"./routes/error/Error404\";\nimport {Signup} from \"./routes/login/Signup\";\nimport {Login} from \"./routes/login/Login\";\nimport {Order} from \"./routes/orders/Order\";\nimport {App} from \"./App\";\nimport {MyOrders} from \"./routes/orders/MyOrders\";\nimport {AllOrders} from \"./routes/orders/AllOrders\";\n\nconst routing = (\n    <Router>\n        <Navbar/>\n        <Switch>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/signup\" component={Signup}/>\n            <Route path=\"/cart\" component={Cart}/>\n            <Route path=\"/orders/:id\" component={Order}/>\n            <Route path=\"/orders\" component={AllOrders}/>\n            <Route path=\"/myOrders\" component={MyOrders}/>\n            <Route path=\"/users/:id\" component={User}/>\n            <Route path=\"/users\" component={Users}/>\n            <Route path=\"/products/:id\" component={Product}/>\n            <Route exact path=\"/\" component={App}/>\n            <Route component={Error404}/>\n        </Switch>\n    </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst Navbar = ({}) =>\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n        <a href=\"/\" className=\"navbar-brand d-flex w-50 mr-auto\">Boardgames online shop</a>\n        <div className=\"navbar-collapse collapse w-100\" id=\"collapsingNavbar3\">\n            <ul className=\"nav navbar-nav ml-auto w-100 justify-content-end\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/users/678\">Profile</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/cart\">Cart</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/orders\">All customer orders</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/myOrders\">My Orders</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/users\">Users</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/login\">Log in</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/signup\">Sign up</Link>\n                </li>\n            </ul>\n        </div>\n    </nav>;\n\nexport {Navbar};","import React from 'react';\nimport {Orders} from \"./Orders\";\nimport {fetchOrders} from \"./ordersDAO\";\n\nconst AllOrders = () => <Orders fetchOrders={fetchOrders} title='All customer orders'/>\n\nexport {AllOrders}","import React from 'react';\nimport {Orders} from \"./Orders\";\nimport {fetchCustomerOrders} from \"./ordersDAO\";\n\nconst MyOrders = () => <Orders fetchOrders={() => fetchCustomerOrders(123324234)}\n                               title='My orders'/>;\n\nexport {MyOrders}","import React from 'react'\n\nconst Error404 = () => <h1 className=\"container content-padding\">Not found</h1>;\n\nexport {Error404};"],"sourceRoot":""}